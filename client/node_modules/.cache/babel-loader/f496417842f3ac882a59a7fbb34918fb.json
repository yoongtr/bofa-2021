{"ast":null,"code":"import _objectSpread from \"/Users/yoong.thuydung/playground/bofa-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/yoong.thuydung/playground/bofa-hackathon/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport axios from 'axios';\nimport Headers from \"./Header\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar renderCount = 0;\nexport default function App() {\n  _s();\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.formState.errors;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(function (data) {\n        console.log(data);\n        var user_params = {};\n        var instance;\n\n        if (data.date != \"\" && data.clientid == \"\" && data.tradeid == \"\") {\n          console.log(data.date);\n\n          var _instance = axios.create({\n            baseURL: '/trades/date/' + data.date,\n            timeout: 15000\n          }); // axios({\n          //   method: 'get',\n          //   url: '/trades/date/' + data.date\n          // })\n          // .then(\n          //   function (response) {\n          //     console.log(response.data)\n          //   }\n          // );\n\n        } else if (data.date == \"\" && data.tradeid != \"\" && data.clientid == \"\") {\n          axios({\n            method: 'get',\n            url: '/trades/tradeid/' + data.tradeid\n          }).then(function (response) {\n            console.log(response.data);\n          });\n        } else if (data.date == \"\" && data.tradeid == \"\" && data.clientid != \"\") {\n          user_params = {\n            \"tradeID\": data.tradeid\n          };\n          axios({\n            method: 'get',\n            url: '/trades/clientid/' + data.clientid\n          }).then(function (response) {\n            console.log(response.data);\n          });\n        } else {\n          console.log(\"No data\");\n        }\n\n        var responseBody = function responseBody(response) {\n          return response.data;\n        };\n\n        var requests = {\n          get: function get(url) {\n            return instance.get(url).then(responseBody);\n          },\n          post: function post(url, body) {\n            return instance.post(url, body).then(responseBody);\n          },\n          put: function put(url, body) {\n            return instance.put(url, body).then(responseBody);\n          },\n          delete: function _delete(url) {\n            return instance.delete(url).then(responseBody);\n          }\n        };\n        var Post = {\n          getPosts: function getPosts() {\n            return requests.get('posts');\n          },\n          getAPost: function getAPost(id) {\n            return requests.get(\"posts/\".concat(id));\n          },\n          createPost: function createPost(post) {\n            return requests.post('posts', post);\n          },\n          updatePost: function updatePost(post, id) {\n            return requests.put(\"posts/\".concat(id), post);\n          },\n          deletePost: function deletePost(id) {\n            return requests.delete(\"posts/\".concat(id));\n          }\n        };\n      }),\n      children: [/*#__PURE__*/_jsxDEV(Headers, {\n        renderCount: renderCount,\n        description: \"Please enter data into only one of the search fields.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Query by Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, register(\"date\", {\n        maxLength: {\n          value: 8,\n          message: \"Input date as YYYYMMDD.\"\n        }\n      })), {}, {\n        id: \"date\"\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this), errors.date && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errors.date.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tradeid\",\n        children: \"Query by TradeID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        id: \"tradeid\"\n      }, register(\"tradeid\")), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"clientid\",\n        children: \"Query by ClientID:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        id: \"clientid\"\n      }, register(\"clientid\")), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5IaFT5AcWjXpf8kfVXTwqk9Ya+I=\", false, function () {\n  return [useForm];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yoong.thuydung/playground/bofa-hackathon/client/src/App.tsx"],"names":["React","useForm","axios","Headers","renderCount","App","register","handleSubmit","errors","formState","data","console","log","user_params","instance","date","clientid","tradeid","create","baseURL","timeout","method","url","then","response","responseBody","requests","get","post","body","put","delete","Post","getPosts","getAPost","id","createPost","updatePost","deletePost","maxLength","value","message"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAO,cAAP;;AAIA,IAAIC,WAAW,GAAG,CAAlB;AAQA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,iBAIIJ,OAAO,EAJX;AAAA,MACEK,QADF,YACEA,QADF;AAAA,MAEEC,YAFF,YAEEA,YAFF;AAAA,MAGeC,MAHf,YAGEC,SAHF,CAGeD,MAHf;;AAMA,sBACE;AAAA,4BACA;AACE,MAAA,QAAQ,EAAED,YAAY,CAAC,UAACG,IAAD,EAAU;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,YAAIG,WAAW,GAAG,EAAlB;AACA,YAAMC,QAAN;;AAEA,YAAIJ,IAAI,CAACK,IAAL,IAAW,EAAX,IAAiBL,IAAI,CAACM,QAAL,IAAe,EAAhC,IAAsCN,IAAI,CAACO,OAAL,IAAc,EAAxD,EAA4D;AAC1DN,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACK,IAAjB;;AACA,cAAMD,SAAQ,GAAGZ,KAAK,CAACgB,MAAN,CAAa;AAC5BC,YAAAA,OAAO,EAAE,kBAAkBT,IAAI,CAACK,IADJ;AAE5BK,YAAAA,OAAO,EAAE;AAFmB,WAAb,CAAjB,CAF0D,CAO1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD,SAhBD,MAiBK,IAAIV,IAAI,CAACK,IAAL,IAAW,EAAX,IAAiBL,IAAI,CAACO,OAAL,IAAc,EAA/B,IAAqCP,IAAI,CAACM,QAAL,IAAe,EAAxD,EAA4D;AAC/Dd,UAAAA,KAAK,CAAC;AACJmB,YAAAA,MAAM,EAAE,KADJ;AAEJC,YAAAA,GAAG,EAAE,qBAAqBZ,IAAI,CAACO;AAF3B,WAAD,CAAL,CAICM,IAJD,CAKE,UAAUC,QAAV,EAAoB;AAClBb,YAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACd,IAArB;AACD,WAPH;AASD,SAVI,MAWA,IAAIA,IAAI,CAACK,IAAL,IAAW,EAAX,IAAiBL,IAAI,CAACO,OAAL,IAAc,EAA/B,IAAqCP,IAAI,CAACM,QAAL,IAAe,EAAxD,EAA4D;AAC/DH,UAAAA,WAAW,GAAG;AACZ,uBAAWH,IAAI,CAACO;AADJ,WAAd;AAGAf,UAAAA,KAAK,CAAC;AACNmB,YAAAA,MAAM,EAAE,KADF;AAENC,YAAAA,GAAG,EAAE,sBAAsBZ,IAAI,CAACM;AAF1B,WAAD,CAAL,CAIDO,IAJC,CAKA,UAAUC,QAAV,EAAoB;AAClBb,YAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACd,IAArB;AACD,WAPD;AASD,SAbI,MAcA;AACHC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;;AACD,YAAMa,YAAY,GAAG,SAAfA,YAAe,CAACD,QAAD;AAAA,iBAA6BA,QAAQ,CAACd,IAAtC;AAAA,SAArB;;AAEA,YAAMgB,QAAQ,GAAG;AACfC,UAAAA,GAAG,EAAE,aAACL,GAAD;AAAA,mBAAiBR,QAAQ,CAACa,GAAT,CAAaL,GAAb,EAAkBC,IAAlB,CAAuBE,YAAvB,CAAjB;AAAA,WADU;AAEfG,UAAAA,IAAI,EAAE,cAACN,GAAD,EAAcO,IAAd;AAAA,mBAA2Bf,QAAQ,CAACc,IAAT,CAAcN,GAAd,EAAmBO,IAAnB,EAAyBN,IAAzB,CAA8BE,YAA9B,CAA3B;AAAA,WAFS;AAGfK,UAAAA,GAAG,EAAE,aAACR,GAAD,EAAcO,IAAd;AAAA,mBAA2Bf,QAAQ,CAACgB,GAAT,CAAaR,GAAb,EAAkBO,IAAlB,EAAwBN,IAAxB,CAA6BE,YAA7B,CAA3B;AAAA,WAHU;AAIfM,UAAAA,MAAM,EAAE,iBAACT,GAAD;AAAA,mBAAiBR,QAAQ,CAACiB,MAAT,CAAgBT,GAAhB,EAAqBC,IAArB,CAA0BE,YAA1B,CAAjB;AAAA;AAJO,SAAjB;AAOA,YAAMO,IAAI,GAAG;AACXC,UAAAA,QAAQ,EAAE;AAAA,mBAA2BP,QAAQ,CAACC,GAAT,CAAa,OAAb,CAA3B;AAAA,WADC;AAEXO,UAAAA,QAAQ,EAAE,kBAACC,EAAD;AAAA,mBAAmCT,QAAQ,CAACC,GAAT,iBAAsBQ,EAAtB,EAAnC;AAAA,WAFC;AAGXC,UAAAA,UAAU,EAAE,oBAACR,IAAD;AAAA,mBACVF,QAAQ,CAACE,IAAT,CAAc,OAAd,EAAuBA,IAAvB,CADU;AAAA,WAHD;AAKXS,UAAAA,UAAU,EAAE,oBAACT,IAAD,EAAiBO,EAAjB;AAAA,mBACVT,QAAQ,CAACI,GAAT,iBAAsBK,EAAtB,GAA4BP,IAA5B,CADU;AAAA,WALD;AAOXU,UAAAA,UAAU,EAAE,oBAACH,EAAD;AAAA,mBAA+BT,QAAQ,CAACK,MAAT,iBAAyBI,EAAzB,EAA/B;AAAA;AAPD,SAAb;AASD,OApEqB,CADxB;AAAA,8BAuEE,QAAC,OAAD;AACE,QAAA,WAAW,EAAE/B,WADf;AAEE,QAAA,WAAW,EAAC;AAFd;AAAA;AAAA;AAAA;AAAA,cAvEF,eA2EE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3EF,eA4EE,iDACME,QAAQ,CAAC,MAAD,EAAS;AACnBiC,QAAAA,SAAS,EAAE;AAAEC,UAAAA,KAAK,EAAE,CAAT;AAAYC,UAAAA,OAAO,EAAE;AAArB;AADQ,OAAT,CADd;AAIE,QAAA,EAAE,EAAC;AAJL;AAAA;AAAA;AAAA;AAAA,cA5EF,EAkFGjC,MAAM,CAACO,IAAP,iBAAe;AAAA,kBAAIP,MAAM,CAACO,IAAP,CAAY0B;AAAhB;AAAA;AAAA;AAAA;AAAA,cAlFlB,eAoFE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApFF,eAqFE;AACE,QAAA,EAAE,EAAC;AADL,SAEMnC,QAAQ,CAAC,SAAD,CAFd;AAAA;AAAA;AAAA;AAAA,cArFF,eA0FE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1FF,eA2FE;AACE,QAAA,EAAE,EAAC;AADL,SAEMA,QAAQ,CAAC,UAAD,CAFd;AAAA;AAAA;AAAA;AAAA,cA3FF,eAgGE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAhGF;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAmGA;AAAA;AAAA;AAAA;AAAA,YAnGA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyGD;;GAhHuBD,G;UAKlBJ,O;;;KALkBI,G","sourcesContent":["import * as React from \"react\";\nimport { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport axios, { AxiosResponse } from 'axios';\nimport Headers from \"./Header\";\nimport \"./styles.css\";\nimport { PostType } from './queryResult';\n\n\nlet renderCount = 0;\n\ntype FormValues = {\n  date: string;\n  tradeid: string;\n  clientid: string;\n};\n\nexport default function App() {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors }\n  } = useForm<FormValues>();\n\n  return (\n    <div>\n    <form\n      onSubmit={handleSubmit((data) => {\n        console.log(data);\n        var user_params = {};\n        const instance\n        \n        if (data.date!=\"\" && data.clientid==\"\" && data.tradeid==\"\") {\n          console.log(data.date)\n          const instance = axios.create({\n            baseURL: '/trades/date/' + data.date,\n            timeout: 15000,\n          });\n          \n          // axios({\n          //   method: 'get',\n          //   url: '/trades/date/' + data.date\n          // })\n          // .then(\n          //   function (response) {\n          //     console.log(response.data)\n          //   }\n          // );\n        }\n        else if (data.date==\"\" && data.tradeid!=\"\" && data.clientid==\"\") {\n          axios({\n            method: 'get',\n            url: '/trades/tradeid/' + data.tradeid\n          })\n          .then(\n            function (response) {\n              console.log(response.data)\n            }\n          );\n        }\n        else if (data.date==\"\" && data.tradeid==\"\" && data.clientid!=\"\") {\n          user_params = {\n            \"tradeID\": data.tradeid,\n          };\n          axios({\n          method: 'get',\n          url: '/trades/clientid/' + data.clientid\n        })\n        .then(\n          function (response) {\n            console.log(response.data)\n          }\n        );\n        }\n        else {\n          console.log(\"No data\")\n        }\n        const responseBody = (response: AxiosResponse) => response.data;\n          \n        const requests = {\n          get: (url: string) => instance.get(url).then(responseBody),\n          post: (url: string, body: {}) => instance.post(url, body).then(responseBody),\n          put: (url: string, body: {}) => instance.put(url, body).then(responseBody),\n          delete: (url: string) => instance.delete(url).then(responseBody),\n        };\n        \n        const Post = {\n          getPosts: (): Promise<PostType[]> => requests.get('posts'),\n          getAPost: (id: number): Promise<PostType> => requests.get(`posts/${id}`),\n          createPost: (post: PostType): Promise<PostType> =>\n            requests.post('posts', post),\n          updatePost: (post: PostType, id: number): Promise<PostType> =>\n            requests.put(`posts/${id}`, post),\n          deletePost: (id: number): Promise<void> => requests.delete(`posts/${id}`),\n        };\n      })}\n    >\n      <Headers\n        renderCount={renderCount}\n        description=\"Please enter data into only one of the search fields.\"\n      />\n      <label htmlFor=\"date\">Query by Date:</label>\n      <input\n        {...register(\"date\", { \n          maxLength: { value: 8, message: \"Input date as YYYYMMDD.\" }\n        })}\n        id=\"date\"\n      />\n      {errors.date && <p>{errors.date.message}</p>}\n\n      <label htmlFor=\"tradeid\">Query by TradeID:</label>\n      <input\n        id=\"tradeid\"\n        {...register(\"tradeid\")}\n      />\n\n      <label htmlFor=\"clientid\">Query by ClientID:</label>\n      <input\n        id=\"clientid\"\n        {...register(\"clientid\")}\n      />\n\n      <input type=\"submit\" />\n    </form>\n    <div>\n        \n    </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}