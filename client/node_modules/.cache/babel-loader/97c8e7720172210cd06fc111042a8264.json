{"ast":null,"code":"import _classCallCheck from \"/Users/yoong.thuydung/playground/bofa-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yoong.thuydung/playground/bofa-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/yoong.thuydung/playground/bofa-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/yoong.thuydung/playground/bofa-hackathon/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/yoong.thuydung/playground/bofa-hackathon/client/src/BuildDynamicTable.tsx\";\n//Build Dynamic Table - From any WebApi or Local Json File Using AXIOS Methods\nimport * as React from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar BuildDynamicTable = /*#__PURE__*/function (_React$Component) {\n  _inherits(BuildDynamicTable, _React$Component);\n\n  var _super = _createSuper(BuildDynamicTable);\n\n  function BuildDynamicTable(props) {\n    var _this;\n\n    _classCallCheck(this, BuildDynamicTable);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      datarecords: [],\n      datacolumns: []\n    };\n    return _this;\n  }\n\n  _createClass(BuildDynamicTable, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var api_url = \"http://127.0.0.1:8000/trades/clientid/CLIENT-WXS14\";\n      axios.get(api_url).then(function (response) {\n        _this2.setState({\n          datarecords: response.data\n        });\n\n        _this2.extractColumnNames();\n      });\n    }\n  }, {\n    key: \"extractColumnNames\",\n    value: function extractColumnNames() {\n      var firstrecord = _.keys(this.state.datarecords[0]);\n\n      this.setState({\n        datacolumns: firstrecord\n      });\n    }\n  }, {\n    key: \"displayRecords\",\n    value: function displayRecords(key) {\n      var _this3 = this;\n\n      var datacolumns = this.state.datacolumns;\n      return datacolumns.map(function (each_col) {\n        return _this3.displayRecordName(each_col, key);\n      });\n    }\n  }, {\n    key: \"displayRecordName\",\n    value: function displayRecordName(colname, key) {\n      var record = this.state.datarecords[key];\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: record[colname]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this);\n    }\n  }, {\n    key: \"Capitalize\",\n    value: function Capitalize(str) {\n      var str_t = str.toUpperCase();\n      var str_tt = str_t.replace(\"_\", \" \");\n      return str_tt;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var datarecords = this.state.datarecords;\n      var each_datarecord_keys = this.state.datacolumns;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [datarecords.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"No datarecords found at the moment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table table-bordered\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"thead-light\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [each_datarecord_keys && each_datarecord_keys.map(function (each_datarecord_key) {\n                    return /*#__PURE__*/_jsxDEV(\"th\", {\n                      scope: \"col\",\n                      children: _this4.Capitalize(each_datarecord_key)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 29\n                    }, _this4);\n                  }), /*#__PURE__*/_jsxDEV(\"th\", {\n                    scope: \"col\",\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: datarecords && datarecords.map(function (each_datarecord, recordindex) {\n                  return /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: _this4.displayRecords(recordindex)\n                  }, each_datarecord.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 33\n                  }, _this4);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return BuildDynamicTable;\n}(React.Component);\n\nexport default BuildDynamicTable;","map":{"version":3,"sources":["/Users/yoong.thuydung/playground/bofa-hackathon/client/src/BuildDynamicTable.tsx"],"names":["React","axios","_","BuildDynamicTable","props","state","datarecords","datacolumns","api_url","get","then","response","setState","data","extractColumnNames","firstrecord","keys","key","map","each_col","displayRecordName","colname","record","str","str_t","toUpperCase","str_tt","replace","each_datarecord_keys","length","each_datarecord_key","Capitalize","each_datarecord","recordindex","displayRecords","id","Component"],"mappings":"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","sourcesContent":["//Build Dynamic Table - From any WebApi or Local Json File Using AXIOS Methods\n\n\nimport * as React from 'react';\nimport { Link, RouteComponentProps } from 'react-router-dom';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nexport interface IState {\n    datarecords: any[];\n    datacolumns: any[];\n}\n\nclass BuildDynamicTable extends React.Component<RouteComponentProps<any>, IState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = { \n             datarecords: [], \n             datacolumns: [],\n        }\n    }\n    \n    public componentWillMount(): void {\n        const api_url = \"http://127.0.0.1:8000/trades/clientid/CLIENT-WXS14\";\n        axios.get(api_url).then(response => {\n         this.setState({datarecords: response.data});\n          this.extractColumnNames();\n         \n        })\n    }\n\n    private extractColumnNames() \n    { \n        const firstrecord = _.keys(this.state.datarecords[0]);\n        this.setState({datacolumns: firstrecord,});\n    }\n\n    private displayRecords(key: number) {\n    \tconst datacolumns= this.state.datacolumns;\n   \n    \treturn datacolumns.map((each_col) => \n    \t\tthis.displayRecordName(each_col,key)\n    \t) \n    }\n\n    private displayRecordName(colname:string, key:number){\n    \tconst record = this.state.datarecords[key];\n    \treturn <th>{record[colname]}</th> \n    }\n\n    private Capitalize(str: string){\n        const str_t = str.toUpperCase();\n        const str_tt = str_t.replace(\"_\", \" \");\n        return str_tt;\n    }\n\n    public render() {\n        const datarecords = this.state.datarecords;\n        const each_datarecord_keys = this.state.datacolumns;\n        return (\n            <div>\n                {datarecords.length === 0 && (\n                    <div className=\"text-center\">\n                        <h2>No datarecords found at the moment</h2>\n                    </div>\n                )}\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"thead-light\">\n                             <tr>\n                             {each_datarecord_keys && each_datarecord_keys.map(each_datarecord_key => \n                            <th scope=\"col\">{this.Capitalize(each_datarecord_key)}</th>\n                                )}\n                                <th scope=\"col\">Actions</th>\n                                </tr>\n                            </thead>                            \n                            <tbody> \n                            {datarecords && datarecords.map((each_datarecord, recordindex) =>\n                                <tr key={each_datarecord.id}>\n                                {this.displayRecords(recordindex)}\n                                </tr>\n                                )}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BuildDynamicTable;"]},"metadata":{},"sourceType":"module"}