{"version":3,"file":"index.esm.js","sources":["../src/utils/isUndefined.ts","../src/utils/isNullOrUndefined.ts","../src/utils/isObject.ts","../src/utils/compact.ts","../src/utils/get.ts","../src/utils/isKey.ts","../src/utils/stringToPath.ts","../src/utils/set.ts","../src/logic/focusFieldBy.ts","../src/utils/isPrimitive.ts","../src/utils/deepMerge.ts","../src/utils/deepEqual.ts","../src/logic/setFieldArrayDirtyFields.ts","../src/utils/isEmptyObject.ts","../src/constants.ts","../src/logic/shouldRenderFormState.ts","../src/logic/getFieldValueAs.ts","../src/logic/getFieldsValues.ts","../src/logic/getRadioValue.ts","../src/logic/getMultipleSelectValue.ts","../src/utils/isRadioInput.ts","../src/utils/isFileInput.ts","../src/utils/isCheckBoxInput.ts","../src/utils/isMultipleSelect.ts","../src/logic/getCheckboxValue.ts","../src/logic/getFieldValue.ts","../src/logic/isErrorStateChanged.ts","../src/utils/isRegex.ts","../src/logic/getValueAndMessage.ts","../src/utils/isString.ts","../src/utils/isFunction.ts","../src/utils/isBoolean.ts","../src/utils/isMessage.ts","../src/logic/getValidateError.ts","../src/logic/appendErrors.ts","../src/logic/validateField.ts","../src/logic/skipValidation.ts","../src/logic/getNodeParentName.ts","../src/logic/isNameInFieldArray.ts","../src/logic/getProxyFormState.ts","../src/utils/Subject.ts","../src/utils/isWeb.ts","../src/utils/isProxyEnabled.ts","../src/utils/getPath.ts","../src/utils/unset.ts","../src/utils/getValidationModes.ts","../src/utils/isRadioOrCheckbox.ts","../src/utils/isHTMLElement.ts","../src/logic/getFields.ts","../src/useForm.ts","../src/useFormContext.tsx","../src/logic/generateId.ts","../src/logic/mapId.ts","../src/utils/remove.ts","../src/utils/move.ts","../src/utils/swap.ts","../src/utils/prepend.ts","../src/utils/insert.ts","../src/utils/fillEmptyArray.ts","../src/useFieldArray.ts","../src/utils/cloneObject.ts","../src/useFormState.ts","../src/logic/getControllerValue.ts","../src/useController.ts","../src/useWatch.ts","../src/controller.tsx","../src/logic/transformToNestObject.ts"],"sourcesContent":["export default (val: unknown): val is undefined => val === undefined;\n","export default (value: unknown): value is null | undefined => value == null;\n","import isNullOrUndefined from './isNullOrUndefined';\n\nexport const isObjectType = (value: unknown) => typeof value === 'object';\n\nexport default <T extends object>(value: unknown): value is T =>\n  !isNullOrUndefined(value) &&\n  !Array.isArray(value) &&\n  isObjectType(value) &&\n  !(value instanceof Date);\n","export default (value: any[]) => value.filter(Boolean);\n","import isUndefined from './isUndefined';\nimport isNullOrUndefined from './isNullOrUndefined';\nimport compact from './compact';\n\nexport default (obj: any = {}, path: string, defaultValue?: unknown) => {\n  const result = compact(path.split(/[,[\\].]+?/)).reduce(\n    (result, key) => (isNullOrUndefined(result) ? result : result[key]),\n    obj,\n  );\n\n  return isUndefined(result) || result === obj\n    ? isUndefined(obj[path])\n      ? defaultValue\n      : obj[path]\n    : result;\n};\n","export default (value: string) => /^\\w*$/.test(value);\n","import compact from './compact';\n\nexport default (input: string): string[] =>\n  compact(\n    input\n      .replace(/[\"|']/g, '')\n      .replace(/\\[/g, '.')\n      .replace(/\\]/g, '')\n      .split('.'),\n  );\n","import isObject from './isObject';\nimport isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport { FieldValues } from '../types';\n\nexport default function set(\n  object: FieldValues,\n  path: string,\n  value?: unknown,\n) {\n  let index = -1;\n  const tempPath = isKey(path) ? [path] : stringToPath(path);\n  const length = tempPath.length;\n  const lastIndex = length - 1;\n\n  while (++index < length) {\n    const key = tempPath[index];\n    let newValue = value;\n\n    if (index !== lastIndex) {\n      const objValue = object[key];\n      newValue =\n        isObject(objValue) || Array.isArray(objValue)\n          ? objValue\n          : !isNaN(+tempPath[index + 1])\n          ? []\n          : {};\n    }\n    object[key] = newValue;\n    object = object[key];\n  }\n  return object;\n}\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport { get } from '../utils';\nimport { FieldRefs, InternalFieldName } from '../types';\n\nconst focusFieldBy = (\n  fields: FieldRefs,\n  callback: (name: string) => boolean,\n  fieldsNames?: Set<InternalFieldName>,\n) => {\n  for (const key of fieldsNames || Object.keys(fields)) {\n    const field = get(fields, key);\n\n    if (field) {\n      const { _f, ...current } = field;\n\n      if (_f && callback(_f.name)) {\n        if (_f.ref.focus && isUndefined(_f.ref.focus())) {\n          break;\n        } else if (_f.refs) {\n          _f.refs[0].focus();\n          break;\n        }\n      } else if (isObject(current)) {\n        focusFieldBy(current, callback);\n      }\n    }\n  }\n};\n\nexport default focusFieldBy;\n","import isNullOrUndefined from './isNullOrUndefined';\nimport { isObjectType } from './isObject';\nimport { Primitive } from '../types';\n\nexport default (value: unknown): value is Primitive =>\n  isNullOrUndefined(value) || !isObjectType(value);\n","import isObject from './isObject';\nimport isPrimitive from './isPrimitive';\n\nexport function deepMerge<\n  T extends Record<keyof T, any>,\n  U extends Record<keyof U, any>\n>(target: T, source: U): T & U {\n  if (isPrimitive(target) || isPrimitive(source)) {\n    return source;\n  }\n\n  for (const key in source) {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    try {\n      target[key] =\n        (isObject(targetValue) && isObject(sourceValue)) ||\n        (Array.isArray(targetValue) && Array.isArray(sourceValue))\n          ? deepMerge(targetValue, sourceValue)\n          : sourceValue;\n    } catch {}\n  }\n\n  return target;\n}\n","import * as React from 'react';\nimport isObject from '../utils/isObject';\nimport isPrimitive from './isPrimitive';\n\nexport default function deepEqual(\n  object1: any,\n  object2: any,\n  isErrorObject?: boolean,\n) {\n  if (\n    isPrimitive(object1) ||\n    isPrimitive(object2) ||\n    object1 instanceof Date ||\n    object2 instanceof Date\n  ) {\n    return object1 === object2;\n  }\n\n  if (!React.isValidElement(object1)) {\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (const key of keys1) {\n      const val1 = object1[key];\n\n      if (!(isErrorObject && key === 'ref')) {\n        const val2 = object2[key];\n\n        if (\n          (isObject(val1) || Array.isArray(val1)) &&\n          (isObject(val2) || Array.isArray(val2))\n            ? !deepEqual(val1, val2, isErrorObject)\n            : val1 !== val2\n        ) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n","import { get } from '../utils';\nimport set from '../utils/set';\nimport { deepMerge } from '../utils/deepMerge';\nimport deepEqual from '../utils/deepEqual';\n\nfunction setDirtyFields<\n  T extends Record<string, unknown>[],\n  U extends Record<string, unknown>[],\n  K extends Record<string, boolean | []>\n>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n  parentNode?: K,\n  parentName?: keyof K,\n) {\n  let index = -1;\n\n  while (++index < values.length) {\n    for (const key in values[index]) {\n      if (Array.isArray(values[index][key])) {\n        !dirtyFields[index] && (dirtyFields[index] = {});\n        dirtyFields[index][key] = [];\n        setDirtyFields(\n          values[index][key] as T,\n          get(defaultValues[index] || {}, key, []),\n          dirtyFields[index][key] as [],\n          dirtyFields[index],\n          key,\n        );\n      } else {\n        deepEqual(get(defaultValues[index] || {}, key), values[index][key])\n          ? set(dirtyFields[index] || {}, key)\n          : (dirtyFields[index] = {\n              ...dirtyFields[index],\n              [key]: true,\n            });\n      }\n    }\n\n    parentNode &&\n      !dirtyFields.length &&\n      delete parentNode[parentName as keyof K];\n  }\n\n  return dirtyFields;\n}\n\nexport default <T extends U, U extends Record<string, unknown>[]>(\n  values: T,\n  defaultValues: U,\n  dirtyFields: Record<string, boolean | []>[],\n) =>\n  deepMerge(\n    setDirtyFields(values, defaultValues, dirtyFields.slice(0, values.length)),\n    setDirtyFields(defaultValues, values, dirtyFields.slice(0, values.length)),\n  );\n","import isObject from './isObject';\nimport { EmptyObject } from '../types';\n\nexport default (value: unknown): value is EmptyObject =>\n  isObject(value) && !Object.keys(value).length;\n","import { ValidationMode } from './types';\n\nexport const EVENTS = {\n  BLUR: 'blur',\n};\n\nexport const VALIDATION_MODE: ValidationMode = {\n  onBlur: 'onBlur',\n  onChange: 'onChange',\n  onSubmit: 'onSubmit',\n  onTouched: 'onTouched',\n  all: 'all',\n};\n\nexport const SELECT = 'select';\n\nexport const UNDEFINED = 'undefined';\n\nexport const INPUT_VALIDATION_RULES = {\n  max: 'max',\n  min: 'min',\n  maxLength: 'maxLength',\n  minLength: 'minLength',\n  pattern: 'pattern',\n  required: 'required',\n  validate: 'validate',\n};\n","import isEmptyObject from '../utils/isEmptyObject';\nimport { ReadFormState } from '../types';\nimport { VALIDATION_MODE } from '../constants';\n\nexport default <T, K extends ReadFormState>(\n  formState: T,\n  readFormStateRef: K,\n  isRoot?: boolean,\n) =>\n  isEmptyObject(formState) ||\n  Object.keys(formState).length >= Object.keys(readFormStateRef).length ||\n  Object.keys(formState).find(\n    (key) =>\n      readFormStateRef[key as keyof ReadFormState] ===\n      (isRoot ? VALIDATION_MODE.all : true),\n  );\n","import { Field } from '../types';\n\nexport default (\n  value: any,\n  { valueAsNumber, valueAsDate, setValueAs }: Field['_f'],\n  shouldReturnAsValue?: boolean,\n) =>\n  shouldReturnAsValue\n    ? valueAsNumber\n      ? value === ''\n        ? NaN\n        : +value\n      : valueAsDate\n      ? new Date(value)\n      : setValueAs\n      ? setValueAs(value)\n      : value\n    : value;\n","import * as React from 'react';\nimport set from '../utils/set';\nimport getFieldValueAs from './getFieldValueAs';\nimport { FieldRefs, FieldValues } from '../types';\n\nconst getFieldsValues = (\n  fieldsRef: React.MutableRefObject<FieldRefs>,\n  defaultValuesRef: React.MutableRefObject<FieldValues>,\n  shouldReturnAsValue?: boolean,\n  output: Record<string, any> = {},\n): any => {\n  for (const name in fieldsRef.current) {\n    const field = fieldsRef.current[name];\n\n    if (field) {\n      const { _f, ...current } = field;\n      set(\n        output,\n        name,\n        _f && !_f.ref.disabled\n          ? getFieldValueAs(_f.value, _f, shouldReturnAsValue)\n          : Array.isArray(field)\n          ? []\n          : {},\n      );\n\n      if (current) {\n        getFieldsValues(\n          {\n            current,\n          },\n          defaultValuesRef,\n          shouldReturnAsValue,\n          output[name],\n        );\n      }\n    }\n  }\n\n  return {\n    ...defaultValuesRef.current,\n    ...output,\n  };\n};\n\nexport default getFieldsValues;\n","type RadioFieldResult = {\n  isValid: boolean;\n  value: number | string | null;\n};\n\nconst defaultReturn: RadioFieldResult = {\n  isValid: false,\n  value: null,\n};\n\nexport default (options?: HTMLInputElement[]): RadioFieldResult =>\n  Array.isArray(options)\n    ? options.reduce(\n        (previous, option): RadioFieldResult =>\n          option && option.checked\n            ? {\n                isValid: true,\n                value: option.value,\n              }\n            : previous,\n        defaultReturn,\n      )\n    : defaultReturn;\n","export default (\n  options: HTMLOptionElement[] | HTMLOptionsCollection,\n): string[] =>\n  [...options]\n    .filter(({ selected }): boolean => selected)\n    .map(({ value }): string => value);\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'radio';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'file';\n","import { FieldElement } from '../types';\n\nexport default (element: FieldElement): element is HTMLInputElement =>\n  element.type === 'checkbox';\n","import { FieldElement } from '../types';\nimport { SELECT } from '../constants';\n\nexport default (element: FieldElement): element is HTMLSelectElement =>\n  element.type === `${SELECT}-multiple`;\n","import isUndefined from '../utils/isUndefined';\n\ntype CheckboxFieldResult = {\n  isValid: boolean;\n  value: string | string[] | boolean;\n};\n\nconst defaultResult: CheckboxFieldResult = {\n  value: false,\n  isValid: false,\n};\n\nconst validResult = { value: true, isValid: true };\n\nexport default (options?: HTMLInputElement[]): CheckboxFieldResult => {\n  if (Array.isArray(options)) {\n    if (options.length > 1) {\n      const values = options\n        .filter((option) => option && option.checked)\n        .map(({ value }) => value);\n      return { value: values, isValid: !!values.length };\n    }\n\n    const { checked, value, attributes } = options[0];\n\n    return checked\n      ? // @ts-expect-error\n        attributes && !isUndefined(attributes.value)\n        ? isUndefined(value)\n          ? validResult\n          : { value: value, isValid: true }\n        : validResult\n      : defaultResult;\n  }\n\n  return defaultResult;\n};\n","import getRadioValue from './getRadioValue';\nimport getMultipleSelectValue from './getMultipleSelectValue';\nimport isRadioInput from '../utils/isRadioInput';\nimport isFileInput from '../utils/isFileInput';\nimport isCheckBox from '../utils/isCheckBoxInput';\nimport isMultipleSelect from '../utils/isMultipleSelect';\nimport getCheckboxValue from './getCheckboxValue';\nimport getFieldValueAs from './getFieldValueAs';\nimport { Field } from '../types';\n\nexport default function getFieldValue(\n  field?: Field,\n  shouldReturnAsValue?: boolean,\n) {\n  if (field && field._f) {\n    const { ref } = field._f;\n\n    if (ref.disabled) {\n      return;\n    }\n\n    if (isFileInput(ref)) {\n      return ref.files;\n    }\n\n    if (isRadioInput(ref)) {\n      return getRadioValue(field._f.refs).value;\n    }\n\n    if (isMultipleSelect(ref)) {\n      return getMultipleSelectValue(ref.options);\n    }\n\n    if (isCheckBox(ref)) {\n      return getCheckboxValue(field._f.refs).value;\n    }\n\n    return getFieldValueAs(ref.value, field._f, shouldReturnAsValue);\n  }\n}\n","import get from '../utils/get';\nimport isUndefined from '../utils/isUndefined';\nimport deepEqual from '../utils/deepEqual';\nimport {\n  FieldValues,\n  InternalFieldName,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n  FieldError,\n} from '../types';\n\nexport default <TFieldValues extends FieldValues>({\n  errors,\n  name,\n  error,\n  validFields,\n  fieldsWithValidation,\n}: {\n  errors: FieldErrors<TFieldValues>;\n  error: FieldError | undefined;\n  name: InternalFieldName;\n  validFields: FieldNamesMarkedBoolean<TFieldValues>;\n  fieldsWithValidation: FieldNamesMarkedBoolean<TFieldValues>;\n}): boolean => {\n  const isValid = isUndefined(error);\n  const previousError = get(errors, name);\n\n  return (\n    (isValid && !!previousError) ||\n    (!isValid && !deepEqual(previousError, error, true)) ||\n    (isValid && get(fieldsWithValidation, name) && !get(validFields, name))\n  );\n};\n","export default (value: unknown): value is RegExp => value instanceof RegExp;\n","import isObject from '../utils/isObject';\nimport isRegex from '../utils/isRegex';\nimport { ValidationRule } from '../types';\n\nexport default (validationData?: ValidationRule) =>\n  isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n      };\n","export default (value: unknown): value is string => typeof value === 'string';\n","export default (value: unknown): value is Function =>\n  typeof value === 'function';\n","export default (value: unknown): value is boolean => typeof value === 'boolean';\n","import * as React from 'react';\nimport isString from '../utils/isString';\nimport { Message } from '../types';\n\nexport default (value: unknown): value is Message =>\n  isString(value) || React.isValidElement(value as JSX.Element);\n","import isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport { FieldError, ValidateResult, Ref } from '../types';\n\nexport default function getValidateError(\n  result: ValidateResult,\n  ref: Ref,\n  type = 'validate',\n): FieldError | void {\n  if (isMessage(result) || (isBoolean(result) && !result)) {\n    return {\n      type,\n      message: isMessage(result) ? result : '',\n      ref,\n    };\n  }\n}\n","import {\n  InternalFieldName,\n  ValidateResult,\n  InternalFieldErrors,\n} from '../types';\n\nexport default (\n  name: InternalFieldName,\n  validateAllFieldCriteria: boolean,\n  errors: InternalFieldErrors,\n  type: string,\n  message: ValidateResult,\n) =>\n  validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n          ...(errors[name] && errors[name]!.types ? errors[name]!.types : {}),\n          [type]: message || true,\n        },\n      }\n    : {};\n","import getRadioValue from './getRadioValue';\nimport getCheckboxValue from './getCheckboxValue';\nimport isNullOrUndefined from '../utils/isNullOrUndefined';\nimport isRadioInput from '../utils/isRadioInput';\nimport getValueAndMessage from './getValueAndMessage';\nimport isCheckBoxInput from '../utils/isCheckBoxInput';\nimport isString from '../utils/isString';\nimport isEmptyObject from '../utils/isEmptyObject';\nimport isObject from '../utils/isObject';\nimport isFunction from '../utils/isFunction';\nimport isRegex from '../utils/isRegex';\nimport isBoolean from '../utils/isBoolean';\nimport isMessage from '../utils/isMessage';\nimport getValidateError from './getValidateError';\nimport appendErrors from './appendErrors';\nimport { INPUT_VALIDATION_RULES } from '../constants';\nimport { Field, Message, FieldError, InternalFieldErrors } from '../types';\n\nexport default async (\n  {\n    _f: {\n      ref,\n      refs,\n      required,\n      maxLength,\n      minLength,\n      min,\n      max,\n      pattern,\n      validate,\n      name,\n      value: inputValue,\n    },\n  }: Field,\n  validateAllFieldCriteria: boolean,\n): Promise<InternalFieldErrors> => {\n  const error: InternalFieldErrors = {};\n  const isRadio = isRadioInput(ref);\n  const isCheckBox = isCheckBoxInput(ref);\n  const isRadioOrCheckbox = isRadio || isCheckBox;\n  const isEmpty =\n    !inputValue || (Array.isArray(inputValue) && !inputValue.length);\n  const appendErrorsCurry = appendErrors.bind(\n    null,\n    name,\n    validateAllFieldCriteria,\n    error,\n  );\n  const getMinMaxMessage = (\n    exceedMax: boolean,\n    maxLengthMessage: Message,\n    minLengthMessage: Message,\n    maxType = INPUT_VALIDATION_RULES.maxLength,\n    minType = INPUT_VALIDATION_RULES.minLength,\n  ) => {\n    const message = exceedMax ? maxLengthMessage : minLengthMessage;\n    error[name] = {\n      type: exceedMax ? maxType : minType,\n      message,\n      ref,\n      ...(exceedMax\n        ? appendErrorsCurry(maxType, message)\n        : appendErrorsCurry(minType, message)),\n    };\n  };\n\n  if (\n    required &&\n    ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(inputValue))) ||\n      (isBoolean(inputValue) && !inputValue) ||\n      (isCheckBox && !getCheckboxValue(refs).isValid) ||\n      (isRadio && !getRadioValue(refs).isValid))\n  ) {\n    const { value, message } = isMessage(required)\n      ? { value: !!required, message: required }\n      : getValueAndMessage(required);\n\n    if (value) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.required,\n        message,\n        ref: isRadioOrCheckbox ? (refs || [])[0] || {} : ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (\n    (!isNullOrUndefined(min) || !isNullOrUndefined(max)) &&\n    inputValue !== ''\n  ) {\n    let exceedMax;\n    let exceedMin;\n    const maxOutput = getValueAndMessage(max);\n    const minOutput = getValueAndMessage(min);\n\n    if (!isNaN(inputValue)) {\n      const valueNumber =\n        (ref as HTMLInputElement).valueAsNumber || parseFloat(inputValue);\n      if (!isNullOrUndefined(maxOutput.value)) {\n        exceedMax = valueNumber > maxOutput.value;\n      }\n      if (!isNullOrUndefined(minOutput.value)) {\n        exceedMin = valueNumber < minOutput.value;\n      }\n    } else {\n      const valueDate =\n        (ref as HTMLInputElement).valueAsDate || new Date(inputValue);\n      if (isString(maxOutput.value)) {\n        exceedMax = valueDate > new Date(maxOutput.value);\n      }\n      if (isString(minOutput.value)) {\n        exceedMin = valueDate < new Date(minOutput.value);\n      }\n    }\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        !!exceedMax,\n        maxOutput.message,\n        minOutput.message,\n        INPUT_VALIDATION_RULES.max,\n        INPUT_VALIDATION_RULES.min,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(inputValue) && !isEmpty && (maxLength || minLength)) {\n    const maxLengthOutput = getValueAndMessage(maxLength);\n    const minLengthOutput = getValueAndMessage(minLength);\n    const exceedMax =\n      !isNullOrUndefined(maxLengthOutput.value) &&\n      inputValue.length > maxLengthOutput.value;\n    const exceedMin =\n      !isNullOrUndefined(minLengthOutput.value) &&\n      inputValue.length < minLengthOutput.value;\n\n    if (exceedMax || exceedMin) {\n      getMinMaxMessage(\n        exceedMax,\n        maxLengthOutput.message,\n        minLengthOutput.message,\n      );\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (isString(inputValue) && pattern && !isEmpty) {\n    const { value: patternValue, message } = getValueAndMessage(pattern);\n\n    if (isRegex(patternValue) && !patternValue.test(inputValue)) {\n      error[name] = {\n        type: INPUT_VALIDATION_RULES.pattern,\n        message,\n        ref,\n        ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n      };\n      if (!validateAllFieldCriteria) {\n        return error;\n      }\n    }\n  }\n\n  if (validate) {\n    const validateRef = isRadioOrCheckbox && refs ? refs[0] : ref;\n\n    if (isFunction(validate)) {\n      const result = await validate(inputValue);\n      const validateError = getValidateError(result, validateRef);\n\n      if (validateError) {\n        error[name] = {\n          ...validateError,\n          ...appendErrorsCurry(\n            INPUT_VALIDATION_RULES.validate,\n            validateError.message,\n          ),\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    } else if (isObject(validate)) {\n      let validationResult = {} as FieldError;\n      for (const [key, validateFunction] of Object.entries(validate)) {\n        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n          break;\n        }\n\n        const validateResult = await validateFunction(inputValue);\n        const validateError = getValidateError(\n          validateResult,\n          validateRef,\n          key,\n        );\n\n        if (validateError) {\n          validationResult = {\n            ...validateError,\n            ...appendErrorsCurry(key, validateError.message),\n          };\n\n          if (validateAllFieldCriteria) {\n            error[name] = validationResult;\n          }\n        }\n      }\n\n      if (!isEmptyObject(validationResult)) {\n        error[name] = {\n          ref: validateRef,\n          ...validationResult,\n        };\n        if (!validateAllFieldCriteria) {\n          return error;\n        }\n      }\n    }\n  }\n\n  return error;\n};\n","export default ({\n  isOnBlur,\n  isOnChange,\n  isOnTouch,\n  isTouched,\n  isReValidateOnBlur,\n  isReValidateOnChange,\n  isBlurEvent,\n  isSubmitted,\n  isOnAll,\n}: {\n  isOnAll?: boolean;\n  isOnBlur?: boolean;\n  isOnChange?: boolean;\n  isReValidateOnBlur?: boolean;\n  isReValidateOnChange?: boolean;\n  isBlurEvent?: boolean;\n  isSubmitted?: boolean;\n  isOnTouch?: boolean;\n  isTouched?: boolean;\n}) => {\n  if (isOnAll) {\n    return false;\n  } else if (!isSubmitted && isOnTouch) {\n    return !(isTouched || isBlurEvent);\n  } else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\n    return !isBlurEvent;\n  } else if (isSubmitted ? isReValidateOnChange : isOnChange) {\n    return isBlurEvent;\n  }\n  return true;\n};\n","export default (name: string) => name.substring(0, name.search(/.\\d/)) || name;\n","import getNodeParentName from './getNodeParentName';\nimport { InternalFieldName } from '../types';\n\nexport default (names: Set<InternalFieldName>, name: InternalFieldName) =>\n  [...names].some((current) => getNodeParentName(name) === current);\n","import * as React from 'react';\nimport { FormState, FormStateProxy, ReadFormState } from '../types';\nimport { VALIDATION_MODE } from '../constants';\n\nexport default <TFieldValues>(\n  isProxyEnabled: boolean,\n  formState: FormState<TFieldValues>,\n  readFormStateRef: React.MutableRefObject<ReadFormState>,\n  localReadFormStateRef?: React.MutableRefObject<ReadFormState>,\n  isRoot = true,\n) =>\n  isProxyEnabled\n    ? new Proxy(formState, {\n        get: (obj, prop: keyof FormStateProxy) => {\n          if (prop in obj) {\n            if (readFormStateRef.current[prop] !== VALIDATION_MODE.all) {\n              readFormStateRef.current[prop] = isRoot\n                ? VALIDATION_MODE.all\n                : true;\n            }\n            localReadFormStateRef &&\n              (localReadFormStateRef.current[prop] = true);\n            return obj[prop];\n          }\n\n          return undefined;\n        },\n      })\n    : formState;\n","export type Observer<T> = {\n  next: (value: T) => void;\n};\n\ntype TearDown = () => void;\n\nexport type SubjectType<T> = {\n  next: (value: T) => void;\n  subscribe: (\n    value: Observer<T>,\n  ) => {\n    unsubscribe: TearDown;\n  };\n};\n\nexport class Subscription {\n  private tearDowns: TearDown[] = [];\n\n  add(tearDown: TearDown) {\n    this.tearDowns.push(tearDown);\n  }\n\n  unsubscribe() {\n    for (const teardown of this.tearDowns) {\n      teardown();\n    }\n    this.tearDowns = [];\n  }\n}\n\nclass Subscriber<T> implements Observer<T> {\n  closed = false;\n\n  constructor(private observer: Observer<T>, subscription: Subscription) {\n    subscription.add(() => (this.closed = true));\n  }\n\n  next(value: T) {\n    if (!this.closed) {\n      this.observer.next(value);\n    }\n  }\n}\n\nexport default class Subject<T> {\n  observers: Observer<T>[];\n\n  constructor() {\n    this.observers = [];\n  }\n\n  next(value: T) {\n    for (const observer of this.observers) {\n      observer.next(value);\n    }\n  }\n\n  subscribe(observer: Observer<T>) {\n    const subscription = new Subscription();\n    const subscriber = new Subscriber(observer, subscription);\n    this.observers.push(subscriber);\n\n    return subscription;\n  }\n\n  unsubscribe() {\n    this.observers = [];\n  }\n}\n","import { UNDEFINED } from '../constants';\n\nexport default typeof window !== UNDEFINED && typeof document !== UNDEFINED;\n","import isWeb from './isWeb';\nimport { UNDEFINED } from '../constants';\n\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\n\nexport default isProxyEnabled;\n","import isPrimitive from './isPrimitive';\nimport { FieldName } from '../types';\n\nexport const getPath = <TFieldValues>(\n  rootPath: FieldName<TFieldValues>,\n  values: any,\n  paths: FieldName<TFieldValues>[] = [],\n): FieldName<TFieldValues>[] => {\n  for (const property in values) {\n    isPrimitive(values[property])\n      ? paths.push(`${rootPath}.${property}` as FieldName<TFieldValues>)\n      : getPath(\n          `${rootPath}.${property}` as FieldName<TFieldValues>,\n          values[property],\n          paths,\n        );\n  }\n\n  return paths;\n};\n","import isKey from './isKey';\nimport stringToPath from './stringToPath';\nimport isEmptyObject from './isEmptyObject';\nimport isObject from './isObject';\nimport isUndefined from './isUndefined';\nimport isBoolean from './isBoolean';\n\nfunction baseGet(object: any, updatePath: (string | number)[]) {\n  const length = updatePath.slice(0, -1).length;\n  let index = 0;\n\n  while (index < length) {\n    object = isUndefined(object) ? index++ : object[updatePath[index++]];\n  }\n\n  return object;\n}\n\nexport default function unset(object: any, path: string) {\n  const updatePath = isKey(path) ? [path] : stringToPath(path);\n  const childObject =\n    updatePath.length == 1 ? object : baseGet(object, updatePath);\n  const key = updatePath[updatePath.length - 1];\n  let previousObjRef;\n\n  if (childObject) {\n    delete childObject[key];\n  }\n\n  for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\n    let index = -1;\n    let objectRef;\n    const currentPaths = updatePath.slice(0, -(k + 1));\n    const currentPathsLength = currentPaths.length - 1;\n\n    if (k > 0) {\n      previousObjRef = object;\n    }\n\n    while (++index < currentPaths.length) {\n      const item = currentPaths[index];\n      objectRef = objectRef ? objectRef[item] : object[item];\n\n      if (\n        currentPathsLength === index &&\n        ((isObject(objectRef) && isEmptyObject(objectRef)) ||\n          (Array.isArray(objectRef) &&\n            !objectRef.filter(\n              (data) =>\n                (isObject(data) && !isEmptyObject(data)) || isBoolean(data),\n            ).length))\n      ) {\n        previousObjRef ? delete previousObjRef[item] : delete object[item];\n      }\n\n      previousObjRef = objectRef;\n    }\n  }\n\n  return object;\n}\n","import { VALIDATION_MODE } from '../constants';\nimport { Mode } from '../types';\n\nexport default (\n  mode?: Mode,\n): {\n  isOnSubmit: boolean;\n  isOnBlur: boolean;\n  isOnChange: boolean;\n  isOnAll: boolean;\n  isOnTouch: boolean;\n} => ({\n  isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n  isOnBlur: mode === VALIDATION_MODE.onBlur,\n  isOnChange: mode === VALIDATION_MODE.onChange,\n  isOnAll: mode === VALIDATION_MODE.all,\n  isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n","import isRadioInput from './isRadioInput';\nimport isCheckBoxInput from './isCheckBoxInput';\nimport { FieldElement } from '../types';\n\nexport default (ref: FieldElement): ref is HTMLInputElement =>\n  isRadioInput(ref) || isCheckBoxInput(ref);\n","export default (value: any): value is HTMLElement =>\n  value instanceof HTMLElement;\n","import { Field, FieldRefs, InternalFieldName } from '../types';\nimport { get } from '../utils';\nimport isKey from '../utils/isKey';\nimport set from '../utils/set';\n\nexport default function getFields(\n  fieldsNames: Set<InternalFieldName> | InternalFieldName[],\n  fieldsRefs: FieldRefs,\n) {\n  const currentFields: Record<InternalFieldName, Field['_f']> = {};\n\n  for (const name of fieldsNames) {\n    const field = get(fieldsRefs, name) as Field | undefined;\n\n    if (field) {\n      !isKey(name)\n        ? set(currentFields, name, field._f)\n        : (currentFields[name] = field._f);\n    }\n  }\n\n  return currentFields;\n}\n","import * as React from 'react';\nimport focusFieldBy from './logic/focusFieldBy';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport getFieldsValues from './logic/getFieldsValues';\nimport getFieldValue from './logic/getFieldValue';\nimport isErrorStateChanged from './logic/isErrorStateChanged';\nimport validateField from './logic/validateField';\nimport skipValidation from './logic/skipValidation';\nimport getNodeParentName from './logic/getNodeParentName';\nimport deepEqual from './utils/deepEqual';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport getProxyFormState from './logic/getProxyFormState';\nimport Subject, { Subscription } from './utils/Subject';\nimport isProxyEnabled from './utils/isProxyEnabled';\nimport isCheckBoxInput from './utils/isCheckBoxInput';\nimport isEmptyObject from './utils/isEmptyObject';\nimport isRadioInput from './utils/isRadioInput';\nimport isFileInput from './utils/isFileInput';\nimport { getPath } from './utils/getPath';\nimport isFunction from './utils/isFunction';\nimport isString from './utils/isString';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport set from './utils/set';\nimport unset from './utils/unset';\nimport getValidationModes from './utils/getValidationModes';\nimport isMultipleSelect from './utils/isMultipleSelect';\nimport compact from './utils/compact';\nimport isNullOrUndefined from './utils/isNullOrUndefined';\nimport isRadioOrCheckboxFunction from './utils/isRadioOrCheckbox';\nimport isWeb from './utils/isWeb';\nimport isHTMLElement from './utils/isHTMLElement';\nimport getFields from './logic/getFields';\nimport { EVENTS, UNDEFINED, VALIDATION_MODE } from './constants';\nimport {\n  UseFormMethods,\n  FieldValues,\n  UnpackNestedValue,\n  FieldName,\n  InternalFieldName,\n  Field,\n  FieldRefs,\n  UseFormProps,\n  RegisterOptions,\n  ReadFormState,\n  Ref,\n  SetValueConfig,\n  FormState,\n  FieldNamesMarkedBoolean,\n  DeepPartial,\n  InternalNameSet,\n  DefaultValues,\n  FieldError,\n  SetFieldValue,\n  FieldArrayDefaultValues,\n  RegisterCallback,\n  FieldPath,\n  WatchObserver,\n  FieldPathValue,\n  FieldPathValues,\n  KeepStateOptions,\n  EventType,\n  UseFormTrigger,\n  UseFormSetValue,\n  UseFormUnregister,\n  UseFormClearErrors,\n  UseFormSetError,\n  UseFormRegister,\n  UseFormHandleSubmit,\n  UseFormReset,\n  WatchInternal,\n  GetFormIsDirty,\n  HandleChange,\n} from './types';\n\nconst isWindowUndefined = typeof window === UNDEFINED;\n\nexport function useForm<\n  TFieldValues extends FieldValues = FieldValues,\n  TContext extends object = object\n>({\n  mode = VALIDATION_MODE.onSubmit,\n  reValidateMode = VALIDATION_MODE.onChange,\n  resolver,\n  context,\n  defaultValues = {} as DefaultValues<TFieldValues>,\n  shouldFocusError = true,\n  criteriaMode,\n}: UseFormProps<TFieldValues, TContext> = {}): UseFormMethods<TFieldValues> {\n  const fieldsRef = React.useRef<FieldRefs>({});\n  const fieldsNamesRef = React.useRef<Set<InternalFieldName>>(new Set());\n  const formStateSubjectRef = React.useRef(\n    new Subject<Partial<FormState<TFieldValues>>>(),\n  );\n  const watchSubjectRef = React.useRef(\n    new Subject<{\n      name?: InternalFieldName;\n      type?: EventType;\n      value?: unknown;\n    }>(),\n  );\n  const controllerSubjectRef = React.useRef(\n    new Subject<DefaultValues<TFieldValues>>(),\n  );\n  const fieldArraySubjectRef = React.useRef(\n    new Subject<{\n      name?: InternalFieldName;\n      fields: any;\n      isReset?: boolean;\n    }>(),\n  );\n  const fieldArrayUpdatedValuesRef = React.useRef<{\n    name?: InternalFieldName;\n    fields?: DeepPartial<TFieldValues>;\n  }>({});\n  const fieldArrayDefaultValuesRef = React.useRef<FieldArrayDefaultValues>({});\n  const watchFieldsRef = React.useRef<InternalNameSet>(new Set());\n  const isMountedRef = React.useRef(false);\n  const fieldsWithValidationRef = React.useRef<\n    FieldNamesMarkedBoolean<TFieldValues>\n  >({});\n  const validFieldsRef = React.useRef<FieldNamesMarkedBoolean<TFieldValues>>(\n    {},\n  );\n  const defaultValuesRef = React.useRef<DefaultValues<TFieldValues>>(\n    defaultValues,\n  );\n  const isWatchAllRef = React.useRef(false);\n  const contextRef = React.useRef(context);\n  const resolverRef = React.useRef(resolver);\n  const fieldArrayNamesRef = React.useRef<InternalNameSet>(new Set());\n  const validationMode = getValidationModes(mode);\n  const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\n  const [formState, setFormState] = React.useState<FormState<TFieldValues>>({\n    isDirty: false,\n    isValidating: false,\n    dirtyFields: {},\n    isSubmitted: false,\n    submitCount: 0,\n    touchedFields: {},\n    isSubmitting: false,\n    isSubmitSuccessful: false,\n    isValid: !validationMode.isOnSubmit,\n    errors: {},\n  });\n  const readFormStateRef = React.useRef<ReadFormState>({\n    isDirty: !isProxyEnabled,\n    dirtyFields: !isProxyEnabled,\n    touchedFields: !isProxyEnabled || validationMode.isOnTouch,\n    isValidating: !isProxyEnabled,\n    isValid: !isProxyEnabled,\n    errors: !isProxyEnabled,\n  });\n  const formStateRef = React.useRef(formState);\n\n  contextRef.current = context;\n  resolverRef.current = resolver;\n\n  const getIsValid = () =>\n    (formStateRef.current.isValid =\n      deepEqual(validFieldsRef.current, fieldsWithValidationRef.current) &&\n      isEmptyObject(formStateRef.current.errors));\n\n  const shouldRenderBaseOnError = React.useCallback(\n    (\n      name: InternalFieldName,\n      error?: FieldError,\n      shouldRender: boolean | null = false,\n      state: {\n        dirty?: FieldNamesMarkedBoolean<TFieldValues>;\n        isDirty?: boolean;\n        touched?: FieldNamesMarkedBoolean<TFieldValues>;\n      } = {},\n      isValid?: boolean,\n    ): boolean | void => {\n      let shouldReRender =\n        shouldRender ||\n        isErrorStateChanged<TFieldValues>({\n          errors: formStateRef.current.errors,\n          error,\n          name,\n          validFields: validFieldsRef.current,\n          fieldsWithValidation: fieldsWithValidationRef.current,\n        });\n      const previousError = get(formStateRef.current.errors, name);\n\n      if (error) {\n        unset(validFieldsRef.current, name);\n        shouldReRender =\n          shouldReRender ||\n          !previousError ||\n          !deepEqual(previousError, error, true);\n        set(formStateRef.current.errors, name, error);\n      } else {\n        if (get(fieldsWithValidationRef.current, name) || resolverRef.current) {\n          set(validFieldsRef.current, name, true);\n          shouldReRender = shouldReRender || previousError;\n        }\n\n        unset(formStateRef.current.errors, name);\n      }\n\n      if (\n        (shouldReRender && !isNullOrUndefined(shouldRender)) ||\n        !isEmptyObject(state)\n      ) {\n        formStateSubjectRef.current.next({\n          ...state,\n          isValid: resolverRef.current ? isValid : getIsValid(),\n          errors: formStateRef.current.errors,\n        });\n      }\n\n      formStateSubjectRef.current.next({\n        isValidating: false,\n      });\n    },\n    [],\n  );\n\n  const setFieldValue = React.useCallback(\n    (name: InternalFieldName, rawValue: SetFieldValue<TFieldValues>) => {\n      const { _f } = get(fieldsRef.current, name) as Field;\n\n      if (_f) {\n        const { ref, refs } = _f;\n        const value =\n          isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\n            ? ''\n            : rawValue;\n        _f.value = rawValue;\n\n        if (isRadioInput(ref)) {\n          (refs || []).forEach(\n            (radioRef: HTMLInputElement) =>\n              (radioRef.checked = radioRef.value === value),\n          );\n        } else if (isFileInput(ref) && !isString(value)) {\n          ref.files = value as FileList;\n        } else if (isMultipleSelect(ref)) {\n          [...ref.options].forEach(\n            (selectRef) =>\n              (selectRef.selected = (value as string[]).includes(\n                selectRef.value,\n              )),\n          );\n        } else if (isCheckBoxInput(ref) && refs) {\n          refs.length > 1\n            ? refs.forEach(\n                (checkboxRef) =>\n                  (checkboxRef.checked = Array.isArray(value)\n                    ? !!(value as []).find(\n                        (data: string) => data === checkboxRef.value,\n                      )\n                    : value === checkboxRef.value),\n              )\n            : (refs[0].checked = !!value);\n        } else {\n          ref.value = value;\n        }\n      }\n    },\n    [],\n  );\n\n  const getFormIsDirty: GetFormIsDirty = React.useCallback((name, data) => {\n    if (readFormStateRef.current.isDirty) {\n      const formValues = getValues();\n\n      name && data && set(formValues, name, data);\n\n      return !deepEqual(formValues, defaultValuesRef.current);\n    }\n\n    return false;\n  }, []);\n\n  const updateAndGetDirtyState = React.useCallback(\n    (\n      name: InternalFieldName,\n      shouldRender = true,\n    ): Partial<\n      Pick<FormState<TFieldValues>, 'dirtyFields' | 'isDirty' | 'touchedFields'>\n    > => {\n      if (\n        readFormStateRef.current.isDirty ||\n        readFormStateRef.current.dirtyFields\n      ) {\n        const isFieldDirty = !deepEqual(\n          get(defaultValuesRef.current, name),\n          getFieldValue(get(fieldsRef.current, name) as Field, true),\n        );\n        const isDirtyFieldExist = get(formStateRef.current.dirtyFields, name);\n        const previousIsDirty = formStateRef.current.isDirty;\n\n        isFieldDirty\n          ? set(formStateRef.current.dirtyFields, name, true)\n          : unset(formStateRef.current.dirtyFields, name);\n\n        const state = {\n          isDirty: getFormIsDirty(),\n          dirtyFields: formStateRef.current.dirtyFields,\n        };\n\n        const isChanged =\n          (readFormStateRef.current.isDirty &&\n            previousIsDirty !== state.isDirty) ||\n          (readFormStateRef.current.dirtyFields &&\n            isDirtyFieldExist !== get(formStateRef.current.dirtyFields, name));\n\n        isChanged && shouldRender && formStateSubjectRef.current.next(state);\n\n        return isChanged ? state : {};\n      }\n\n      return {};\n    },\n    [],\n  );\n\n  const executeValidation = React.useCallback(\n    async (\n      name: InternalFieldName,\n      skipReRender?: boolean | null,\n    ): Promise<boolean> => {\n      const error = (\n        await validateField(\n          get(fieldsRef.current, name) as Field,\n          isValidateAllFieldCriteria,\n        )\n      )[name];\n\n      shouldRenderBaseOnError(name, error, skipReRender);\n\n      return isUndefined(error);\n    },\n    [shouldRenderBaseOnError, isValidateAllFieldCriteria],\n  );\n\n  const executeSchemaOrResolverValidation = React.useCallback(\n    async (\n      names: InternalFieldName[],\n      currentNames: FieldName<TFieldValues>[] = [],\n    ) => {\n      const { errors } = await resolverRef.current!(\n        getFieldsValues(fieldsRef, defaultValuesRef, true),\n        contextRef.current,\n        {\n          criteriaMode,\n          names: currentNames,\n          fields: getFields(fieldsNamesRef.current, fieldsRef.current),\n        },\n      );\n\n      for (const name of names) {\n        const error = get(errors, name);\n        error\n          ? set(formStateRef.current.errors, name, error)\n          : unset(formStateRef.current.errors, name);\n      }\n\n      return errors;\n    },\n    [shouldRenderBaseOnError, criteriaMode],\n  );\n\n  const validateForm = async (fieldsRef: FieldRefs) => {\n    for (const name in fieldsRef) {\n      const field = fieldsRef[name];\n\n      if (field) {\n        const { _f, ...current } = field;\n\n        if (_f) {\n          const fieldError = await validateField(\n            field,\n            isValidateAllFieldCriteria,\n          );\n\n          if (fieldError[field._f.name]) {\n            set(\n              formStateRef.current.errors,\n              field._f.name,\n              fieldError[field._f.name],\n            );\n            unset(validFieldsRef.current, field._f.name);\n          } else if (get(fieldsWithValidationRef.current, field._f.name)) {\n            set(validFieldsRef.current, field._f.name, true);\n            unset(formStateRef.current.errors, field._f.name);\n          }\n        }\n\n        current && (await validateForm(current));\n      }\n    }\n  };\n\n  const trigger: UseFormTrigger<TFieldValues> = React.useCallback(\n    async (name) => {\n      const fields = isUndefined(name)\n        ? Object.keys(fieldsRef.current)\n        : Array.isArray(name)\n        ? name\n        : [name];\n      let isValid;\n\n      formStateSubjectRef.current.next({\n        isValidating: true,\n      });\n\n      if (resolver) {\n        isValid = isEmptyObject(\n          await executeSchemaOrResolverValidation(\n            fields,\n            isUndefined(name)\n              ? undefined\n              : (fields as FieldName<TFieldValues>[]),\n          ),\n        );\n      } else {\n        isUndefined(name)\n          ? await validateForm(fieldsRef.current)\n          : await Promise.all(\n              fields.map(async (data) => await executeValidation(data, null)),\n            );\n      }\n\n      formStateSubjectRef.current.next({\n        errors: formStateRef.current.errors,\n        isValidating: false,\n        isValid: resolver ? isValid : getIsValid(),\n      });\n    },\n    [executeSchemaOrResolverValidation, executeValidation],\n  );\n\n  const setInternalValues = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      { shouldDirty, shouldValidate }: SetValueConfig,\n    ) => {\n      const data = {};\n      set(data, name, value);\n\n      for (const fieldName of getPath(name, value)) {\n        if (get(fieldsRef.current, fieldName)) {\n          setFieldValue(fieldName, get(data, fieldName));\n          shouldDirty && updateAndGetDirtyState(fieldName);\n          shouldValidate && trigger(fieldName as FieldName<TFieldValues>);\n        }\n      }\n    },\n    [trigger, setFieldValue, updateAndGetDirtyState],\n  );\n\n  const setInternalValue = React.useCallback(\n    (\n      name: FieldName<TFieldValues>,\n      value: SetFieldValue<TFieldValues>,\n      options: SetValueConfig,\n    ) => {\n      const field = get(fieldsRef.current, name);\n\n      if (field && field._f) {\n        setFieldValue(name, value);\n        options.shouldDirty && updateAndGetDirtyState(name);\n        options.shouldValidate && trigger(name as FieldName<TFieldValues>);\n      } else {\n        setInternalValues(name, value, options);\n\n        if (fieldArrayNamesRef.current.has(name)) {\n          fieldArraySubjectRef.current.next({\n            fields: value,\n            name,\n            isReset: true,\n          });\n\n          if (\n            (readFormStateRef.current.isDirty ||\n              readFormStateRef.current.dirtyFields) &&\n            options.shouldDirty\n          ) {\n            set(\n              formStateRef.current.dirtyFields,\n              name,\n              setFieldArrayDirtyFields(\n                value,\n                get(defaultValuesRef.current, name, []),\n                get(formStateRef.current.dirtyFields, name, []),\n              ),\n            );\n\n            formStateSubjectRef.current.next({\n              dirtyFields: formStateRef.current.dirtyFields,\n              isDirty: getFormIsDirty(name, value),\n            });\n          }\n        }\n      }\n    },\n    [updateAndGetDirtyState, setFieldValue, setInternalValues],\n  );\n\n  const isFieldWatched = <T extends FieldName<TFieldValues>>(name: T) =>\n    isWatchAllRef.current ||\n    watchFieldsRef.current.has(name) ||\n    watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\n\n  const updateValueAndGetDefault = (name: InternalFieldName) => {\n    let defaultValue;\n    const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\n    const field = get(fieldsRef.current, name) as Field;\n\n    if (\n      field &&\n      (!isEmptyObject(defaultValuesRef.current) || !isUndefined(field._f.value))\n    ) {\n      defaultValue = isUndefined(field._f.value)\n        ? get(defaultValuesRef.current, name)\n        : field._f.value;\n\n      if (!isUndefined(defaultValue) && !isFieldArray) {\n        setFieldValue(name, defaultValue);\n      }\n    }\n\n    return defaultValue;\n  };\n\n  const setValue: UseFormSetValue<TFieldValues> = (name, value, options) => {\n    setInternalValue(name, value, options || {});\n    isFieldWatched(name) && formStateSubjectRef.current.next({});\n    watchSubjectRef.current.next({ name, value });\n  };\n\n  const handleChange: HandleChange = React.useCallback(\n    async ({ type, target, target: { value, type: inputType } }) => {\n      let name = (target as Ref)!.name;\n      let error;\n      let isValid;\n      const field = get(fieldsRef.current, name) as Field;\n\n      if (field) {\n        const inputValue = inputType ? getFieldValue(field) : value;\n        const isBlurEvent = type === EVENTS.BLUR;\n        const {\n          isOnBlur: isReValidateOnBlur,\n          isOnChange: isReValidateOnChange,\n        } = getValidationModes(reValidateMode);\n        const shouldSkipValidation = skipValidation({\n          isBlurEvent,\n          isTouched: !!get(formStateRef.current.touchedFields, name),\n          isSubmitted: formStateRef.current.isSubmitted,\n          isReValidateOnBlur,\n          isReValidateOnChange,\n          ...validationMode,\n        });\n        const isWatched =\n          !isBlurEvent && isFieldWatched(name as FieldName<TFieldValues>);\n\n        if (!isUndefined(inputValue)) {\n          field._f.value = inputValue;\n        }\n\n        const state = updateAndGetDirtyState(name, false);\n\n        if (\n          isBlurEvent &&\n          readFormStateRef.current.touchedFields &&\n          !get(formStateRef.current.touchedFields, name)\n        ) {\n          set(formStateRef.current.touchedFields, name, true);\n          state.touchedFields = formStateRef.current.touchedFields;\n        }\n\n        let shouldRender = !isEmptyObject(state) || isWatched;\n\n        if (shouldSkipValidation) {\n          !isBlurEvent &&\n            watchSubjectRef.current.next({\n              name,\n              type,\n              value: inputValue,\n            });\n          return (\n            shouldRender &&\n            formStateSubjectRef.current.next(isWatched ? {} : state)\n          );\n        }\n\n        formStateSubjectRef.current.next({\n          isValidating: true,\n        });\n\n        if (resolverRef.current) {\n          const { errors } = await resolverRef.current(\n            getFieldsValues(fieldsRef, defaultValuesRef, true),\n            contextRef.current,\n            {\n              criteriaMode,\n              fields: getFields([name], fieldsRef.current),\n              names: [name as FieldName<TFieldValues>],\n            },\n          );\n          const previousFormIsValid = formStateRef.current.isValid;\n          error = get(errors, name);\n\n          if (isCheckBoxInput(target as Ref) && !error) {\n            const parentNodeName = getNodeParentName(name);\n            const currentError = get(errors, parentNodeName, {});\n            currentError.type && currentError.message && (error = currentError);\n\n            if (\n              currentError ||\n              get(formStateRef.current.errors, parentNodeName)\n            ) {\n              name = parentNodeName;\n            }\n          }\n\n          isValid = isEmptyObject(errors);\n\n          previousFormIsValid !== isValid && (shouldRender = true);\n        } else {\n          error = (await validateField(field, isValidateAllFieldCriteria))[\n            name\n          ];\n        }\n\n        !isBlurEvent &&\n          watchSubjectRef.current.next({\n            name,\n            type,\n            value: inputValue,\n          });\n        shouldRenderBaseOnError(name, error, shouldRender, state, isValid);\n      }\n    },\n    [],\n  );\n\n  function getValues(): UnpackNestedValue<TFieldValues>;\n  function getValues<TName extends FieldPath<TFieldValues>>(\n    fieldName: TName,\n  ): FieldPathValue<TFieldValues, TName>;\n  function getValues<TName extends FieldPath<TFieldValues>[]>(\n    fieldNames: TName,\n  ): FieldPathValues<TFieldValues, TName>;\n  function getValues(\n    fieldNames?: FieldPath<TFieldValues> | FieldPath<TFieldValues>[],\n  ) {\n    const values = isMountedRef.current\n      ? getFieldsValues(fieldsRef, defaultValuesRef)\n      : defaultValues;\n\n    if (isUndefined(fieldNames)) {\n      return values;\n    }\n\n    if (isString(fieldNames)) {\n      return get(values, fieldNames as InternalFieldName);\n    }\n\n    return fieldNames.map((name) => get(values, name as InternalFieldName));\n  }\n\n  const updateIsValid = React.useCallback(\n    async (values = {}) => {\n      if (resolver) {\n        const { errors } = await resolverRef.current!(\n          {\n            ...getFieldsValues(fieldsRef, defaultValuesRef, true),\n            ...values,\n          },\n          contextRef.current,\n          {\n            criteriaMode,\n            fields: getFields(fieldsNamesRef.current, fieldsRef.current),\n          },\n        );\n        const isValid = isEmptyObject(errors);\n\n        formStateRef.current.isValid !== isValid &&\n          formStateSubjectRef.current.next({\n            isValid,\n          });\n      } else {\n        getIsValid();\n      }\n    },\n    [criteriaMode],\n  );\n\n  const clearErrors: UseFormClearErrors<TFieldValues> = (name) => {\n    name &&\n      (Array.isArray(name) ? name : [name]).forEach((inputName) =>\n        unset(formStateRef.current.errors, inputName),\n      );\n\n    formStateSubjectRef.current.next({\n      errors: name ? formStateRef.current.errors : {},\n    });\n  };\n\n  const setError: UseFormSetError<TFieldValues> = (name, error, options) => {\n    const ref = ((get(fieldsRef.current, name) as Field) || { _f: {} })._f.ref;\n\n    set(formStateRef.current.errors, name, {\n      ...error,\n      ref,\n    });\n\n    formStateSubjectRef.current.next({\n      errors: formStateRef.current.errors,\n      isValid: false,\n    });\n\n    options && options.shouldFocus && ref && ref.focus && ref.focus();\n  };\n\n  const watchInternal: WatchInternal = React.useCallback(\n    (fieldNames, defaultValue, isGlobal) => {\n      const { fields, name } = fieldArrayUpdatedValuesRef.current;\n      const isArrayNames = Array.isArray(fieldNames);\n      let fieldValues = isMountedRef.current\n        ? getValues()\n        : isUndefined(defaultValue)\n        ? defaultValuesRef.current\n        : isArrayNames\n        ? defaultValue || {}\n        : { [fieldNames as string]: defaultValue };\n\n      if (fields) {\n        name ? set(fieldValues, name, fields) : (fieldValues = fields);\n\n        fieldArrayUpdatedValuesRef.current = {\n          fields: undefined,\n          name: undefined,\n        };\n      }\n\n      if (isUndefined(fieldNames)) {\n        isWatchAllRef.current = true;\n        return fieldValues;\n      }\n\n      const result = [];\n\n      for (const fieldName of isArrayNames ? fieldNames : [fieldNames]) {\n        isGlobal && watchFieldsRef.current.add(fieldName as string);\n        result.push(get(fieldValues, fieldName as string));\n      }\n\n      return isArrayNames ? result : result[0];\n    },\n    [],\n  );\n\n  function watch(): UnpackNestedValue<TFieldValues>;\n  function watch<TName extends FieldPath<TFieldValues>>(\n    fieldName: TName,\n    defaultValue?: FieldPathValue<TFieldValues, TName>,\n  ): FieldPathValue<TFieldValues, TName>;\n  function watch<TName extends FieldPath<TFieldValues>[]>(\n    fieldName: TName,\n    defaultValue?: FieldPathValues<TFieldValues, TName>,\n  ): FieldPathValues<TFieldValues, TName>;\n  function watch(\n    callback: WatchObserver,\n    defaultValues?: UnpackNestedValue<DeepPartial<TFieldValues>>,\n  ): Subscription;\n  function watch(\n    fieldName?:\n      | FieldPath<TFieldValues>\n      | FieldPath<TFieldValues>[]\n      | WatchObserver,\n    defaultValue?: unknown,\n  ) {\n    if (isFunction(fieldName)) {\n      return watchSubjectRef.current.subscribe({\n        next: (info) => fieldName(watchInternal(undefined, defaultValue), info),\n      });\n    }\n\n    return watchInternal(fieldName as string | string[], defaultValue, true);\n  }\n\n  const unregister: UseFormUnregister<TFieldValues> = (name, options = {}) => {\n    for (const inputName of name\n      ? Array.isArray(name)\n        ? name\n        : [name]\n      : Object.keys(fieldsNamesRef.current)) {\n      fieldsNamesRef.current.delete(inputName);\n\n      if (get(fieldsRef.current, inputName) as Field) {\n        if (!options.keepIsValid) {\n          unset(fieldsWithValidationRef.current, inputName);\n          unset(validFieldsRef.current, inputName);\n        }\n        !options.keepValues && unset(formStateRef.current.errors, inputName);\n        !options.keepErrors && unset(fieldsRef.current, inputName);\n        !options.keepDirty &&\n          unset(formStateRef.current.dirtyFields, inputName);\n        !options.keepTouched &&\n          unset(formStateRef.current.touchedFields, inputName);\n        !options.keepDefaultValues &&\n          unset(defaultValuesRef.current, inputName);\n\n        watchSubjectRef.current.next({\n          name: inputName,\n        });\n      }\n    }\n\n    formStateSubjectRef.current.next({\n      ...formStateRef.current,\n      ...(!options.keepDirty ? {} : { isDirty: getFormIsDirty() }),\n      ...(resolver ? {} : { isValid: getIsValid() }),\n    });\n\n    if (!options.keepIsValid) {\n      updateIsValid();\n    }\n  };\n\n  const registerFieldRef = (\n    name: InternalFieldName,\n    ref: HTMLInputElement,\n    options?: RegisterOptions,\n  ): ((name: InternalFieldName) => void) | void => {\n    let field = get(fieldsRef.current, name) as Field;\n\n    if (field) {\n      const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\n\n      if (\n        (isRadioOrCheckbox\n          ? Array.isArray(field._f.refs) &&\n            compact(field._f.refs).find(\n              (option) => ref.value === option.value && option === ref,\n            )\n          : ref === field._f.ref) ||\n        !field\n      ) {\n        return;\n      }\n\n      field = {\n        _f: isRadioOrCheckbox\n          ? {\n              ...field._f,\n              refs: [\n                ...compact(field._f.refs || []).filter(\n                  (ref) => isHTMLElement(ref) && document.contains(ref),\n                ),\n                ref,\n              ],\n              ref: { type: ref.type, name },\n            }\n          : {\n              ...field._f,\n              ref,\n            },\n      };\n\n      set(fieldsRef.current, name, field);\n\n      const defaultValue = updateValueAndGetDefault(name);\n\n      if (\n        isRadioOrCheckbox && Array.isArray(defaultValue)\n          ? !deepEqual(get(fieldsRef.current, name)._f.value, defaultValue)\n          : true\n      ) {\n        get(fieldsRef.current, name)._f.value = getFieldValue(\n          get(fieldsRef.current, name),\n        );\n      }\n\n      if (options) {\n        if (\n          !validationMode.isOnSubmit &&\n          field &&\n          readFormStateRef.current.isValid\n        ) {\n          validateField(field, isValidateAllFieldCriteria).then((error) => {\n            isEmptyObject(error)\n              ? set(validFieldsRef.current, name, true)\n              : unset(validFieldsRef.current, name);\n\n            formStateRef.current.isValid &&\n              !isEmptyObject(error) &&\n              setFormState({ ...formStateRef.current, isValid: getIsValid() });\n          });\n        }\n      }\n    }\n  };\n\n  const register: UseFormRegister<TFieldValues> = React.useCallback(\n    (name, options) => {\n      set(fieldsRef.current, name, {\n        _f: {\n          ...(get(fieldsRef.current, name)\n            ? {\n                ref: get(fieldsRef.current, name)._f.ref,\n                ...get(fieldsRef.current, name)._f,\n              }\n            : { ref: { name } }),\n          name,\n          ...options,\n        },\n      });\n      options && set(fieldsWithValidationRef.current, name, true);\n      fieldsNamesRef.current.add(name);\n\n      updateValueAndGetDefault(name);\n\n      return isWindowUndefined\n        ? ({} as RegisterCallback)\n        : {\n            name,\n            onChange: handleChange,\n            onBlur: handleChange,\n            ref: (ref: HTMLInputElement | null) =>\n              ref && registerFieldRef(name, ref, options),\n          };\n    },\n    [defaultValuesRef.current],\n  );\n\n  const handleSubmit: UseFormHandleSubmit<TFieldValues> = React.useCallback(\n    (onValid, onInvalid) => async (e) => {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n        e.persist();\n      }\n      let fieldValues = getFieldsValues(fieldsRef, defaultValuesRef, true);\n\n      formStateSubjectRef.current.next({\n        isSubmitting: true,\n      });\n\n      try {\n        if (resolverRef.current) {\n          const { errors, values } = await resolverRef.current(\n            fieldValues,\n            contextRef.current,\n            {\n              criteriaMode,\n              fields: getFields(fieldsNamesRef.current, fieldsRef.current),\n            },\n          );\n          formStateRef.current.errors = errors;\n          fieldValues = values;\n        } else {\n          await validateForm(fieldsRef.current);\n        }\n\n        if (\n          isEmptyObject(formStateRef.current.errors) &&\n          Object.keys(formStateRef.current.errors).every((name) =>\n            get(fieldValues, name),\n          )\n        ) {\n          formStateSubjectRef.current.next({\n            errors: {},\n            isSubmitting: true,\n          });\n          await onValid(fieldValues, e);\n        } else {\n          onInvalid && (await onInvalid(formStateRef.current.errors, e));\n          shouldFocusError &&\n            focusFieldBy(\n              fieldsRef.current,\n              (key: string) => get(formStateRef.current.errors, key),\n              fieldsNamesRef.current,\n            );\n        }\n      } finally {\n        formStateRef.current.isSubmitting = false;\n        formStateSubjectRef.current.next({\n          isSubmitted: true,\n          isSubmitting: false,\n          isSubmitSuccessful: isEmptyObject(formStateRef.current.errors),\n          submitCount: formStateRef.current.submitCount + 1,\n          errors: formStateRef.current.errors,\n        });\n      }\n    },\n    [shouldFocusError, isValidateAllFieldCriteria, criteriaMode],\n  );\n\n  const resetFromState = ({\n    keepErrors,\n    keepDirty,\n    keepIsSubmitted,\n    keepTouched,\n    keepIsValid,\n    keepSubmitCount,\n  }: KeepStateOptions) => {\n    if (!keepIsValid) {\n      validFieldsRef.current = {};\n      fieldsWithValidationRef.current = {};\n    }\n\n    watchFieldsRef.current = new Set();\n    isWatchAllRef.current = false;\n\n    formStateSubjectRef.current.next({\n      submitCount: keepSubmitCount ? formStateRef.current.submitCount : 0,\n      isDirty: keepDirty ? formStateRef.current.isDirty : false,\n      isSubmitted: keepIsSubmitted ? formStateRef.current.isSubmitted : false,\n      isValid: keepIsValid\n        ? formStateRef.current.isValid\n        : !validationMode.isOnSubmit,\n      dirtyFields: keepDirty ? formStateRef.current.dirtyFields : {},\n      touchedFields: keepTouched ? formStateRef.current.touchedFields : {},\n      errors: keepErrors ? formStateRef.current.errors : {},\n      isSubmitting: false,\n      isSubmitSuccessful: false,\n    });\n  };\n\n  const reset: UseFormReset<TFieldValues> = (values, keepStateOptions = {}) => {\n    const updatedValues = values || defaultValuesRef.current;\n\n    if (isWeb && !keepStateOptions.keepValues) {\n      for (const field of Object.values(fieldsRef.current)) {\n        if (field && field._f) {\n          const { ref, refs } = field._f;\n          const inputRef = Array.isArray(refs) ? refs[0] : ref;\n\n          if (isHTMLElement(inputRef)) {\n            try {\n              inputRef.closest('form')!.reset();\n              break;\n            } catch {}\n          }\n        }\n      }\n    }\n\n    !keepStateOptions.keepDefaultValues &&\n      (defaultValuesRef.current = { ...updatedValues });\n\n    if (!keepStateOptions.keepValues) {\n      fieldsRef.current = {};\n\n      controllerSubjectRef.current.next({ ...updatedValues });\n\n      watchSubjectRef.current.next({\n        value: { ...updatedValues },\n      });\n\n      fieldArraySubjectRef.current.next({\n        fields: { ...updatedValues },\n        isReset: true,\n      });\n    }\n\n    resetFromState(keepStateOptions);\n  };\n\n  React.useEffect(() => {\n    resolver && readFormStateRef.current.isValid && updateIsValid();\n  }, [defaultValuesRef.current]);\n\n  React.useEffect(() => {\n    isMountedRef.current = true;\n    const formStateSubscription = formStateSubjectRef.current.subscribe({\n      next(formState: Partial<FormState<TFieldValues>> = {}) {\n        if (shouldRenderFormState(formState, readFormStateRef.current, true)) {\n          formStateRef.current = {\n            ...formStateRef.current,\n            ...formState,\n          };\n          setFormState(formStateRef.current);\n        }\n      },\n    });\n\n    const useFieldArraySubscription = fieldArraySubjectRef.current.subscribe({\n      next(state) {\n        if (state.fields && state.name) {\n          fieldArrayUpdatedValuesRef.current = state;\n\n          if (readFormStateRef.current.isValid) {\n            const values = getValues();\n            set(values, state.name, state.fields);\n            updateIsValid(values);\n          }\n        }\n      },\n    });\n\n    return () => {\n      watchSubjectRef.current.unsubscribe();\n      formStateSubscription.unsubscribe();\n      useFieldArraySubscription.unsubscribe();\n    };\n  }, []);\n\n  return {\n    control: React.useMemo(\n      () => ({\n        register,\n        isWatchAllRef,\n        watchFieldsRef,\n        getFormIsDirty,\n        formStateSubjectRef,\n        fieldArraySubjectRef,\n        controllerSubjectRef,\n        watchSubjectRef,\n        watchInternal,\n        fieldsRef,\n        validFieldsRef,\n        fieldsWithValidationRef,\n        fieldArrayNamesRef,\n        readFormStateRef,\n        formStateRef,\n        defaultValuesRef,\n        fieldArrayDefaultValuesRef,\n      }),\n      [],\n    ),\n    formState: getProxyFormState<TFieldValues>(\n      isProxyEnabled,\n      formState,\n      readFormStateRef,\n    ),\n    trigger,\n    register,\n    handleSubmit,\n    watch: React.useCallback(watch, []),\n    setValue: React.useCallback(setValue, [setInternalValue, trigger]),\n    getValues: React.useCallback(getValues, []),\n    reset: React.useCallback(reset, []),\n    clearErrors: React.useCallback(clearErrors, []),\n    unregister: React.useCallback(unregister, []),\n    setError: React.useCallback(setError, []),\n  };\n}\n","import * as React from 'react';\nimport { UseFormMethods, FieldValues, FormProviderProps } from './types';\n\nconst FormContext = React.createContext<UseFormMethods | null>(null);\n\nFormContext.displayName = 'RHFContext';\n\nexport const useFormContext = <\n  TFieldValues extends FieldValues\n>(): UseFormMethods<TFieldValues> =>\n  (React.useContext(FormContext) as unknown) as UseFormMethods<TFieldValues>;\n\nexport const FormProvider = <TFieldValues extends FieldValues>({\n  children,\n  ...props\n}: FormProviderProps<TFieldValues>) => (\n  <FormContext.Provider value={(props as unknown) as UseFormMethods}>\n    {children}\n  </FormContext.Provider>\n);\n","import { UNDEFINED } from '../constants';\n\nexport default () => {\n  const d =\n    typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\n\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16 + d) % 16 | 0;\n\n    return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n};\n","import { FieldValues } from '../types';\nimport generateId from './generateId';\n\nexport default <\n  TFieldArrayValues extends FieldValues = FieldValues,\n  TKeyName extends string = 'id'\n>(\n  values: Partial<TFieldArrayValues>[] = [],\n  keyName: TKeyName,\n): any =>\n  values.map((value: Partial<TFieldArrayValues>) => ({\n    [keyName]: (value && value[keyName]) || generateId(),\n    ...value,\n  }));\n","import isUndefined from './isUndefined';\nimport compact from './compact';\n\nfunction removeAtIndexes<T>(data: T[], indexes: number[]): T[] {\n  let i = 0;\n  const temp = [...data];\n\n  for (const index of indexes) {\n    temp.splice(index - i, 1);\n    i++;\n  }\n\n  return compact(temp).length ? temp : [];\n}\n\nexport default <T>(data: T[], index?: number | number[]): T[] =>\n  isUndefined(index)\n    ? []\n    : removeAtIndexes(data, (Array.isArray(index) ? index : [index]).sort());\n","import isUndefined from './isUndefined';\n\nexport default <T>(\n  data: (T | undefined)[],\n  from: number,\n  to: number,\n): (T | undefined)[] => {\n  if (Array.isArray(data)) {\n    if (isUndefined(data[to])) {\n      data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n  }\n\n  return [];\n};\n","export default <T>(data: T[], indexA: number, indexB: number): void => {\n  const temp = [data[indexB], data[indexA]];\n  data[indexA] = temp[0];\n  data[indexB] = temp[1];\n};\n","export default function prepend<T>(data: T[]): (T | undefined)[];\nexport default function prepend<T>(data: T[], value: T | T[]): T[];\nexport default function prepend<T>(\n  data: T[],\n  value?: T | T[],\n): (T | undefined)[] {\n  return [...(Array.isArray(value) ? value : [value || undefined]), ...data];\n}\n","export default function insert<T>(data: T[], index: number): (T | undefined)[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value: T | T[],\n): T[];\nexport default function insert<T>(\n  data: T[],\n  index: number,\n  value?: T | T[],\n): (T | undefined)[] {\n  return [\n    ...data.slice(0, index),\n    ...(Array.isArray(value) ? value : [value]),\n    ...data.slice(index),\n  ];\n}\n","export default <T>(value: T | T[]): undefined[] | undefined =>\n  Array.isArray(value) ? Array(value.length).fill(undefined) : undefined;\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport setFieldArrayDirtyFields from './logic/setFieldArrayDirtyFields';\nimport mapIds from './logic/mapId';\nimport getFieldArrayParentName from './logic/getNodeParentName';\nimport get from './utils/get';\nimport set from './utils/set';\nimport removeArrayAt from './utils/remove';\nimport unset from './utils/unset';\nimport moveArrayAt from './utils/move';\nimport swapArrayAt from './utils/swap';\nimport prependAt from './utils/prepend';\nimport insertAt from './utils/insert';\nimport fillEmptyArray from './utils/fillEmptyArray';\nimport compact from './utils/compact';\nimport isUndefined from './utils/isUndefined';\nimport focusFieldBy from './logic/focusFieldBy';\nimport getFieldsValues from './logic/getFieldsValues';\nimport {\n  FieldValues,\n  UseFieldArrayProps,\n  FieldPath,\n  FieldArrayWithId,\n  UseFieldArrayMethods,\n  FieldArray,\n  FieldArrayMethodsOption,\n  FieldErrors,\n  FieldNamesMarkedBoolean,\n} from './types';\n\nexport const useFieldArray = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n  TKeyName extends string = 'id'\n>({\n  control,\n  name,\n  keyName = 'id' as TKeyName,\n}: UseFieldArrayProps<TFieldValues, TName, TKeyName>): UseFieldArrayMethods<\n  TFieldValues,\n  TName,\n  TKeyName\n> => {\n  const methods = useFormContext();\n  const focusNameRef = React.useRef('');\n  const {\n    isWatchAllRef,\n    watchFieldsRef,\n    getFormIsDirty,\n    watchSubjectRef,\n    fieldArraySubjectRef,\n    fieldArrayNamesRef,\n    fieldsRef,\n    defaultValuesRef,\n    formStateRef,\n    formStateSubjectRef,\n    readFormStateRef,\n    validFieldsRef,\n    fieldsWithValidationRef,\n    fieldArrayDefaultValuesRef,\n  } = control || methods.control;\n\n  const [fields, setFields] = React.useState<\n    Partial<FieldArrayWithId<TFieldValues, TName, TKeyName>>[]\n  >(\n    mapIds(\n      get(fieldArrayDefaultValuesRef.current, getFieldArrayParentName(name))\n        ? get(fieldArrayDefaultValuesRef.current, name, [])\n        : get(defaultValuesRef.current, name, []),\n      keyName,\n    ),\n  );\n\n  set(fieldArrayDefaultValuesRef.current, name, [...fields]);\n  fieldArrayNamesRef.current.add(name);\n\n  const omitKey = <\n    T extends Partial<FieldArrayWithId<TFieldValues, TName, TKeyName>>[]\n  >(\n    fields: T,\n  ) => fields.map(({ [keyName]: omitted, ...rest } = {}) => rest);\n\n  const getCurrentFieldsValues = () => {\n    const values = get(getFieldsValues(fieldsRef, defaultValuesRef), name, []);\n\n    return mapIds<TFieldValues, TKeyName>(\n      get(fieldArrayDefaultValuesRef.current, name, []).map(\n        (item: Partial<TFieldValues>, index: number) => ({\n          ...item,\n          ...values[index],\n        }),\n      ),\n      keyName,\n    );\n  };\n\n  const getFocusDetail = (\n    index: number,\n    options?: FieldArrayMethodsOption,\n  ): string => {\n    if (options) {\n      if (!isUndefined(options.focusIndex)) {\n        return `${name}.${options.focusIndex}`;\n      }\n      if (options.focusName) {\n        return options.focusName;\n      }\n      if (!options.shouldFocus) {\n        return '';\n      }\n    }\n    return `${name}.${index}`;\n  };\n\n  const resetFields = <T>(index?: T) =>\n    (Array.isArray(index) ? index : [index]).forEach((currentIndex) =>\n      set(\n        fieldsRef.current,\n        `${name}${currentIndex ? `.${currentIndex}` : ''}`,\n        [],\n      ),\n    );\n\n  const setFieldsAndNotify = (\n    fieldsValues: Partial<FieldArrayWithId<TFieldValues, TName, TKeyName>>[],\n  ) => {\n    setFields(mapIds(fieldsValues, keyName));\n    fieldArraySubjectRef.current.next({\n      name,\n      fields: omitKey([...fieldsValues]),\n    });\n  };\n\n  const cleanup = <T>(ref: T) =>\n    !compact(get(ref, name, [])).length && unset(ref, name);\n\n  const updateDirtyFieldsWithDefaultValues = <\n    T extends Partial<FieldArrayWithId<TFieldValues, TName, TKeyName>>[]\n  >(\n    updatedFieldArrayValues?: T,\n  ) =>\n    updatedFieldArrayValues &&\n    set(\n      formStateRef.current.dirtyFields,\n      name,\n      setFieldArrayDirtyFields(\n        omitKey(updatedFieldArrayValues),\n        get(defaultValuesRef.current, name, []),\n        get(formStateRef.current.dirtyFields, name, []),\n      ),\n    );\n\n  const batchStateUpdate = <\n    T extends Function,\n    K extends Partial<FieldArrayWithId<TFieldValues, TName, TKeyName>>[]\n  >(\n    method: T,\n    args: {\n      argA?: unknown;\n      argB?: unknown;\n    },\n    updatedFieldValues?: K,\n    updatedFormValues: Partial<\n      FieldArrayWithId<TFieldValues, TName, TKeyName>\n    >[] = [],\n    shouldSet = true,\n    shouldUpdateValid = false,\n  ) => {\n    if (get(fieldsRef.current, name)) {\n      const output = method(get(fieldsRef.current, name), args.argA, args.argB);\n      shouldSet && set(fieldsRef.current, name, output);\n    }\n\n    if (Array.isArray(get(formStateRef.current.errors, name))) {\n      const output = method(\n        get(formStateRef.current.errors, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(formStateRef.current.errors, name, output);\n      cleanup(formStateRef.current.errors);\n    }\n\n    if (\n      readFormStateRef.current.touchedFields &&\n      get(formStateRef.current.touchedFields, name)\n    ) {\n      const output = method(\n        get(formStateRef.current.touchedFields, name),\n        args.argA,\n        args.argB,\n      );\n      shouldSet && set(formStateRef.current.touchedFields, name, output);\n      cleanup(formStateRef.current.touchedFields);\n    }\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      set(\n        formStateRef.current.dirtyFields,\n        name,\n        setFieldArrayDirtyFields(\n          omitKey(updatedFormValues),\n          get(defaultValuesRef.current, name, []),\n          get(formStateRef.current.dirtyFields, name, []),\n        ),\n      );\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n      cleanup(formStateRef.current.dirtyFields);\n    }\n\n    if (shouldUpdateValid && readFormStateRef.current.isValid) {\n      set(\n        validFieldsRef.current,\n        name,\n        method(get(validFieldsRef.current, name, []), args.argA),\n      );\n      cleanup(validFieldsRef.current);\n\n      set(\n        fieldsWithValidationRef.current,\n        name,\n        method(get(fieldsWithValidationRef.current, name, []), args.argA),\n      );\n      cleanup(fieldsWithValidationRef.current);\n    }\n\n    formStateSubjectRef.current.next({\n      isDirty: getFormIsDirty(name, omitKey(updatedFormValues)),\n      errors: formStateRef.current.errors as FieldErrors<TFieldValues>,\n      isValid: formStateRef.current.isValid,\n    });\n  };\n\n  const append = (\n    value:\n      | Partial<FieldArray<TFieldValues, TName>>\n      | Partial<FieldArray<TFieldValues, TName>>[],\n    options?: FieldArrayMethodsOption,\n  ) => {\n    const appendValue = Array.isArray(value) ? value : [value];\n    const updatedFieldValues = [...getCurrentFieldsValues(), ...appendValue];\n    setFieldsAndNotify(updatedFieldValues);\n\n    if (\n      readFormStateRef.current.dirtyFields ||\n      readFormStateRef.current.isDirty\n    ) {\n      updateDirtyFieldsWithDefaultValues(updatedFieldValues);\n\n      formStateSubjectRef.current.next({\n        isDirty: true,\n        dirtyFields: formStateRef.current\n          .dirtyFields as FieldNamesMarkedBoolean<TFieldValues>,\n      });\n    }\n\n    focusNameRef.current = getFocusDetail(\n      updatedFieldValues.length - 1,\n      options,\n    );\n  };\n\n  const prepend = (\n    value:\n      | Partial<FieldArray<TFieldValues, TName>>\n      | Partial<FieldArray<TFieldValues, TName>>[],\n    options?: FieldArrayMethodsOption,\n  ) => {\n    const updatedFieldArrayValues = prependAt(\n      getCurrentFieldsValues(),\n      Array.isArray(value) ? value : [value],\n    );\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(\n      prependAt,\n      {\n        argA: fillEmptyArray(value),\n      },\n      updatedFieldArrayValues,\n    );\n\n    focusNameRef.current = getFocusDetail(0, options);\n  };\n\n  const remove = (index?: number | number[]) => {\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldValues: Partial<\n      FieldArrayWithId<TFieldValues, TName, TKeyName>\n    >[] = removeArrayAt(fieldValues, index);\n    resetFields(index);\n    batchStateUpdate(\n      removeArrayAt,\n      {\n        argA: index,\n      },\n      updatedFieldValues,\n      removeArrayAt(fieldValues, index),\n      true,\n      true,\n    );\n    setFieldsAndNotify(updatedFieldValues);\n  };\n\n  const insert = (\n    index: number,\n    value:\n      | Partial<FieldArray<TFieldValues, TName>>\n      | Partial<FieldArray<TFieldValues, TName>>[],\n    options?: FieldArrayMethodsOption,\n  ) => {\n    const fieldValues = getCurrentFieldsValues();\n    const updatedFieldArrayValues = insertAt(\n      fieldValues,\n      index,\n      Array.isArray(value) ? value : [value],\n    );\n\n    setFieldsAndNotify(updatedFieldArrayValues);\n    batchStateUpdate(\n      insertAt,\n      {\n        argA: index,\n        argB: fillEmptyArray(value),\n      },\n      updatedFieldArrayValues,\n      fieldValues && insertAt(fieldValues, index),\n    );\n\n    focusNameRef.current = getFocusDetail(index, options);\n  };\n\n  const swap = (indexA: number, indexB: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    swapArrayAt(fieldValues, indexA, indexB);\n    batchStateUpdate(\n      swapArrayAt,\n      {\n        argA: indexA,\n        argB: indexB,\n      },\n      undefined,\n      fieldValues,\n      false,\n    );\n    setFieldsAndNotify(fieldValues);\n  };\n\n  const move = (from: number, to: number) => {\n    const fieldValues = getCurrentFieldsValues();\n    moveArrayAt(fieldValues, from, to);\n    setFieldsAndNotify(fieldValues);\n    batchStateUpdate(\n      moveArrayAt,\n      {\n        argA: from,\n        argB: to,\n      },\n      undefined,\n      fieldValues,\n      false,\n    );\n  };\n\n  React.useEffect(() => {\n    if (isWatchAllRef.current) {\n      formStateSubjectRef.current.next({});\n    } else {\n      for (const watchField of watchFieldsRef.current) {\n        if (name.startsWith(watchField)) {\n          formStateSubjectRef.current.next({});\n          break;\n        }\n      }\n    }\n\n    watchSubjectRef.current.next({ name });\n\n    focusNameRef.current &&\n      focusFieldBy(fieldsRef.current, (key: string) =>\n        key.startsWith(focusNameRef.current),\n      );\n\n    focusNameRef.current = '';\n  }, [fields, name]);\n\n  React.useEffect(() => {\n    const fieldArraySubscription = fieldArraySubjectRef.current.subscribe({\n      next({ name: inputName, fields, isReset }) {\n        if (isReset) {\n          if (inputName) {\n            const value = getFieldsValues(fieldsRef, defaultValuesRef);\n            set(value, inputName, fields);\n            set(fieldArrayDefaultValuesRef.current, name, fields);\n            setFieldsAndNotify(get(value, name));\n          } else {\n            fieldArrayDefaultValuesRef.current = fields;\n            setFieldsAndNotify(get(fields, name));\n          }\n        }\n      },\n    });\n\n    return () => {\n      fieldArraySubscription.unsubscribe();\n      unset(fieldArrayDefaultValuesRef.current, name);\n      fieldArrayNamesRef.current.delete(name);\n    };\n  }, []);\n\n  return {\n    swap: React.useCallback(swap, [name]),\n    move: React.useCallback(move, [name]),\n    prepend: React.useCallback(prepend, [name]),\n    append: React.useCallback(append, [name]),\n    remove: React.useCallback(remove, [name]),\n    insert: React.useCallback(insert, [name]),\n    fields: fields as FieldArrayWithId<TFieldValues, TName, TKeyName>,\n  };\n};\n","import isPrimitive from './isPrimitive';\nimport isHTMLElement from './isHTMLElement';\nimport isWeb from './isWeb';\n\nexport default function cloneObject<T extends unknown>(data: T): T {\n  let copy: any;\n\n  if (\n    isPrimitive(data) ||\n    (isWeb && (data instanceof File || isHTMLElement(data)))\n  ) {\n    return data;\n  }\n\n  if (data instanceof Date) {\n    copy = new Date(data.getTime());\n    return copy;\n  }\n\n  if (data instanceof Set) {\n    copy = new Set();\n    for (const item of data) {\n      copy.add(item);\n    }\n    return copy;\n  }\n\n  if (data instanceof Map) {\n    copy = new Map();\n    for (const key of data.keys()) {\n      copy.set(key, cloneObject(data.get(key)));\n    }\n    return copy;\n  }\n\n  copy = Array.isArray(data) ? [] : {};\n\n  for (const key in data) {\n    copy[key] = cloneObject(data[key]);\n  }\n\n  return copy;\n}\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport getProxyFormState from './logic/getProxyFormState';\nimport shouldRenderFormState from './logic/shouldRenderFormState';\nimport isProxyEnabled from './utils/isProxyEnabled';\nimport cloneObject from './utils/cloneObject';\nimport {\n  FieldValues,\n  FormState,\n  UseFormStateMethods,\n  UseFormStateProps,\n} from './types';\n\nfunction useFormState<TFieldValues extends FieldValues = FieldValues>({\n  control,\n}: UseFormStateProps<TFieldValues> = {}): UseFormStateMethods<TFieldValues> {\n  const methods = useFormContext();\n  const { formStateRef, formStateSubjectRef, readFormStateRef } =\n    control || methods.control;\n\n  const [formState, updateFormState] = React.useState(formStateRef.current);\n  const readFormState = React.useRef(cloneObject(readFormStateRef.current));\n\n  React.useEffect(() => {\n    const formStateSubscription = formStateSubjectRef.current.subscribe({\n      next: (formState) => {\n        shouldRenderFormState(formState, readFormState.current) &&\n          updateFormState({\n            ...formStateRef.current,\n            ...formState,\n          });\n      },\n    });\n\n    return () => formStateSubscription.unsubscribe();\n  }, []);\n\n  return getProxyFormState<TFieldValues>(\n    isProxyEnabled,\n    formState as FormState<TFieldValues>,\n    readFormStateRef,\n    readFormState,\n    false,\n  );\n}\n\nexport { useFormState };\n","import isUndefined from '../utils/isUndefined';\nimport isObject from '../utils/isObject';\nimport isPrimitive from '../utils/isPrimitive';\n\nexport default (event: any) =>\n  isPrimitive(event) ||\n  !isObject(event.target) ||\n  (isObject(event.target) && !event.type)\n    ? event\n    : isUndefined(event.target.value)\n    ? event.target.checked\n    : event.target.value;\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport { useFormState } from './useFormState';\nimport isUndefined from './utils/isUndefined';\nimport get from './utils/get';\nimport getControllerValue from './logic/getControllerValue';\nimport isNameInFieldArray from './logic/isNameInFieldArray';\nimport { EVENTS } from './constants';\nimport {\n  FieldValues,\n  UseControllerProps,\n  UseControllerMethods,\n  InternalFieldName,\n} from './types';\n\nexport function useController<TFieldValues extends FieldValues = FieldValues>({\n  name,\n  rules,\n  defaultValue,\n  control,\n}: UseControllerProps<TFieldValues>): UseControllerMethods<TFieldValues> {\n  const methods = useFormContext<TFieldValues>();\n  const {\n    defaultValuesRef,\n    register,\n    fieldsRef,\n    fieldArrayNamesRef,\n    controllerSubjectRef,\n  } = control || methods.control;\n\n  const { onChange, onBlur, ref } = register(name, rules);\n  const getInitialValue = () =>\n    (get(fieldsRef.current, name) &&\n      isUndefined(get(fieldsRef.current, name)._f.value)) ||\n    isNameInFieldArray(fieldArrayNamesRef.current, name)\n      ? isUndefined(defaultValue)\n        ? get(defaultValuesRef.current, name)\n        : defaultValue\n      : get(fieldsRef.current, name)._f.value;\n\n  const [value, setInputStateValue] = React.useState(getInitialValue());\n  const { errors, dirtyFields, touchedFields, isValidating } = useFormState({\n    control: control || methods.control,\n  });\n\n  React.useEffect(() => {\n    if (get(fieldsRef.current, name)) {\n      get(fieldsRef.current, name)._f.value = getInitialValue();\n    }\n\n    const controllerSubscription = controllerSubjectRef.current.subscribe({\n      next: (values) => setInputStateValue(get(values, name)),\n    });\n\n    return () => controllerSubscription.unsubscribe();\n  }, []);\n\n  return {\n    field: {\n      onChange: (event: any) => {\n        const value = getControllerValue(event);\n        setInputStateValue(value);\n\n        onChange({\n          target: {\n            value,\n            name: name as InternalFieldName,\n          },\n        });\n      },\n      onBlur: () => {\n        onBlur({\n          target: {\n            name: name as InternalFieldName,\n          },\n          type: EVENTS.BLUR,\n        });\n      },\n      name,\n      value,\n      ref,\n    },\n    meta: {\n      invalid: !!get(errors, name),\n      isDirty: !!get(dirtyFields, name),\n      isTouched: !!get(touchedFields, name),\n      error: get(errors, name),\n      isValidating,\n    },\n  };\n}\n","import * as React from 'react';\nimport { useFormContext } from './useFormContext';\nimport isUndefined from './utils/isUndefined';\nimport isString from './utils/isString';\nimport get from './utils/get';\nimport isObject from './utils/isObject';\nimport {\n  DeepPartial,\n  UseWatchProps,\n  FieldValues,\n  UnpackNestedValue,\n  Control,\n  FieldPath,\n  InternalFieldName,\n  FieldPathValue,\n  FieldPathValues,\n} from './types';\n\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues\n>(props: {\n  defaultValue?: UnpackNestedValue<DeepPartial<TFieldValues>>;\n  control?: Control<TFieldValues>;\n}): UnpackNestedValue<DeepPartial<TFieldValues>>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>(props: {\n  name: TName;\n  defaultValue?: FieldPathValue<TFieldValues, TName>;\n  control?: Control<TFieldValues>;\n}): FieldPathValue<TFieldValues, TName>;\nexport function useWatch<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues>[] = FieldPath<TFieldValues>[]\n>(props: {\n  name: TName;\n  defaultValue?: UnpackNestedValue<DeepPartial<TFieldValues>>;\n  control?: Control<TFieldValues>;\n}): FieldPathValues<TFieldValues, TName>;\nexport function useWatch<TFieldValues>({\n  control,\n  name,\n  defaultValue,\n}: UseWatchProps<TFieldValues>) {\n  const methods = useFormContext();\n\n  const { watchInternal, defaultValuesRef, watchSubjectRef } =\n    control || methods.control;\n  const [value, updateValue] = React.useState<unknown>(\n    isUndefined(defaultValue)\n      ? Array.isArray(name)\n        ? name.reduce(\n            (previous, inputName) => ({\n              ...previous,\n              [inputName]: get(defaultValuesRef.current, inputName as string),\n            }),\n            {},\n          )\n        : isString(name)\n        ? get(defaultValuesRef.current, name)\n        : defaultValuesRef.current\n      : defaultValue,\n  );\n\n  React.useEffect(() => {\n    const watchSubscription = watchSubjectRef.current.subscribe({\n      next: ({ name: inputName, value }) => {\n        updateValue(\n          isString(inputName) && name === inputName && !isUndefined(value)\n            ? value\n            : name && isObject(value)\n            ? get(value, name as InternalFieldName, defaultValue)\n            : watchInternal(name as string, defaultValue),\n        );\n      },\n    });\n\n    return () => watchSubscription.unsubscribe();\n  }, [name]);\n\n  return value;\n}\n","import { useController } from './useController';\nimport { ControllerProps, FieldValues } from './types';\n\nconst Controller = <TFieldValues extends FieldValues = FieldValues>(\n  props: ControllerProps<TFieldValues>,\n) => props.render(useController(props));\n\nexport { Controller };\n","// Todo: to be removed\nimport set from '../utils/set';\nimport isKey from '../utils/isKey';\nimport { FieldValues } from '../types';\n\nexport default (data: FieldValues, value: Record<string, any> = {}): any => {\n  for (const key in data) {\n    !isKey(key) ? set(value, key, data[key]) : (value[key] = data[key]);\n  }\n  return value;\n};\n"],"names":["React.isValidElement","isCheckBox","getNodeParentName","React.useRef","React.useState","React.useCallback","React.useEffect","React.useMemo","React.createContext","React.useContext","React.createElement","prepend","prependAt","insert","insertAt"],"mappings":"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"}